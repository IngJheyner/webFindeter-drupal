<?php 

use Drupal\Core\Url;
use Drupal\Core\Link;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\ReplaceCommand;


/**
 * Implements hook_help().
 *
 * @inheritdoc
 */
function findeter_user_form_request_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.findeter_user_form_request':
      $output = '';
      $output .= '<h3>Acerca de</h3>';
      $output .= '<p>Este módulo permite registrar los reclamos, peticiones, solicitudes, etc., para la institución Findeter, con campos y comportamientos específicos.</p>';
      $output .= '<p>Para mayor comprensión se contruyó el formulario mediante pasos multiples con comportamiento ajax.</p>';
      $output .= '<h3>Uso</h3>';
      $output .= '<dl>';
      $output .= '<dt>Configuración</dt>';
      $output .= '<dd>Para configurar los principales parámetros necesarios para el funcionamiento del módulo, puede consultar la <a href="/admin/config/findeter_user_form_request/admin">página administrativa</a> del módulo</dd>';
      $output .= '<dd>Una vez instalado el módulo, puede consultar el formulario en la <a href="/user-request-form">dirección</a></dd>';
      $output .= '<dt>Configuración</dt>';
      $output .= '<dd>Para configurar los principales parámetros necesarios para el funcionamiento del módulo, puede consultar la <a href="/admin/config/findeter_user_form_request/admin">página administrativa</a> del módulo</dd>';
      $output .= '<dd>Una vez instalado el módulo, puede consultar el formulario en la <a href="/user-request-form">dirección</a> para realizar el registro de PQRS mediante la web.</dd>';
      $output .= '<dd>Para usuarios registrados, que tengan los derechos suficientes para administrar los request, pueden visitar <a href="/admin/user-request-admin">esta página administrativa</a> donde podrá realizar las acciones que le son permitidas.</dd>';
      $output .= '<dd>Para usuarios administradores, pueden visitar <a href="/admin/request-admin">esta página administrativa</a> donde podrá realizar las acciones que le son permitidas.</dd>';
      $output .= '</dl>';
      return $output;
  }
}


/**
 * Implements hook_preprocess_views_view_field()
 */
function findeter_user_form_request_preprocess_views_view_field(&$variables) {

  $view = $variables['view'];
  $field = $variables['field'];

  if ($view->storage->id() == 'user_request_views'){
    if($view->current_display == 'page_1'){

      if($field->field == 'field_answer'){
          if($variables['output'] == ''){
            $variables['output'] = 'Abierta';
          }else{
            $variables['output'] = 'Cerrada por: '.strip_tags($view->field['uid']->original_value);
          }
        }
      }

      if($field->field == 'view_node'){
        $nid = $view->field['nid']->original_value;
        
        $modalOptions = [
          'class'               => ['use-ajax', 'btn', 'btn-outline-primary', 'button'],
          'data-dialog-type'    => ['modal'],
          'data-dialog'         => ['modal'],
          'data-dialog-options' => ['{"width":800}'],
        ];

        $htmlOutput = '';
        $url = Url::fromRoute('entity.node.canonical', ['node' => $nid]);
        $modalLink = Link::fromTextAndUrl('Ver', $url);
        $modalLink = $modalLink->toRenderable();
        $modalLink['#attributes'] = $modalOptions;
        $htmlOutput .='<br>'.render($modalLink).'<br>';

        if($view->field['field_answer']->original_value == ''){ 

          $url = Url::fromRoute('entity.node.edit_form', ['node' => $nid]);
          $modalLink = Link::fromTextAndUrl('Editar', $url);
          $modalLink = $modalLink->toRenderable();
          $modalLink['#attributes'] = ['class' => ['button']];
          $htmlOutput .=render($modalLink);


          $url = Url::fromRoute('findeter_user_form_request.asign_request',['nid' => $nid]);
          $modalLink = Link::fromTextAndUrl('Asignar', $url);
          $modalLink = $modalLink->toRenderable();
          $modalLink['#attributes'] = $modalOptions;
          $htmlOutput .= render($modalLink).'<br>';

          $url = Url::fromRoute('findeter_user_form_request.asign_request',['nid' => $nid]);
          $modalLink = Link::fromTextAndUrl('Trasladar', $url);
          $modalLink = $modalLink->toRenderable();
          $modalLink['#attributes'] = $modalOptions;
          $htmlOutput .= render($modalLink).'<br>';

          $url = Url::fromRoute('findeter_user_form_request.answer_request',['nid' => $nid]);
          $modalLink = Link::fromTextAndUrl('Responder', $url);
          $modalLink = $modalLink->toRenderable();
          $modalLink['#attributes'] = $modalOptions;
          $htmlOutput .= render($modalLink).'<br>';
        }

        $url = Url::fromRoute('findeter_user_form_request.create_pdf',['nid' => $nid]);
        $modalLink = Link::fromTextAndUrl('PDF', $url);
        $modalLink = $modalLink->toRenderable();
        $modalLink['#attributes'] = ['class' => ['button']];
        $htmlOutput .= render($modalLink);

        $variables['output'] = ['#markup' => $htmlOutput];        
      }

  }

}

/**
* Create an array with the taxonomy terms
*/
function getTaxonomyTermsForm($tid){
  $child_tids = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree('colombia_deparments', $tid, 1, false);

  $options = array();
  foreach ($child_tids as $term) {
    $options[$term->tid] = $term->name;
  }
  return $options;
}


/**
* Callback deparment select ajax event
*/
function callBackDeparment(array &$form, FormStateInterface $form_state) {

  $element= $form_state->getTriggeringElement()["#source"];


  $form_state->setRebuild();

  $parent_tid = $form_state->getValue('field_person_deparment'); // the parent term id
  $municipalityOptions = getTaxonomyTermsForm($parent_tid);

  if($element == 'admin'){
    $elem = $form['info_person']['field_person_municipality'];
  }else{
    $elem = $form['wrapper']['content-fields']['field_person_municipality'];
  }
  
  
  $elem['#options'] = $municipalityOptions;
  $renderer = \Drupal::service('renderer');
  $renderedField = $renderer->render($elem);

  $response = new AjaxResponse();
  
  $response->addCommand(new ReplaceCommand('#output-municipalities', $renderedField));
    
  return $response;
}