<?php

use Drupal\Core\Url;
use Drupal\Core\Link;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\ReplaceCommand;
use Drupal\Core\Ajax\InvokeCommand;
use Drupal\Core\File\FileSystemInterface;
use Drupal\Core\Render\Element\Date;
use Drupal\views\Views;
use Drupal\views\ViewExecutable;
use Drupal\Core\Render\Markup;
use Drupal\node\Entity\Node;

use PhpOffice\PhpSpreadsheet\Calculation\DateTimeExcel\Days;

use Cmixin\BusinessDay;
use Carbon\Carbon;

/**
 * Implements hook_help().
 * @author Sandi <email@email.com>
 */
function findeter_pqrsd_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.findeter_pqrsd':
      $output = '';
      $output .= '<h3>Acerca de</h3>';
      $output .= '<p>Este módulo permite registrar los reclamos, peticiones, solicitudes, etc., para la institución Findeter, con campos y comportamientos específicos.</p>';
      $output .= '<p>Para mayor comprensión se contruyó el formulario mediante pasos multiples con comportamiento ajax.</p>';
      $output .= '<h3>Uso</h3>';
      $output .= '<dl>';
      $output .= '<dt>Configuración</dt>';
      $output .= '<dd>Para configurar los principales parámetros necesarios para el funcionamiento del módulo, puede consultar la <a href="/admin/config/findeter_pqrsd/admin">página administrativa</a> del módulo</dd>';
      $output .= '<dd>Una vez instalado el módulo, puede consultar el formulario en la <a href="/user-request-form">dirección</a></dd>';
      $output .= '<dt>Configuración</dt>';
      $output .= '<dd>Para configurar los principales parámetros necesarios para el funcionamiento del módulo, puede consultar la <a href="/admin/config/findeter_pqrsd/admin">página administrativa</a> del módulo</dd>';
      $output .= '<dd>Una vez instalado el módulo, puede consultar el formulario en la <a href="/user-request-form">dirección</a> para realizar el registro de PQRS mediante la web.</dd>';
      $output .= '<dd>Para usuarios registrados, que tengan los derechos suficientes para administrar los request, pueden visitar <a href="/admin/user-request-admin">esta página administrativa</a> donde podrá realizar las acciones que le son permitidas.</dd>';
      $output .= '<dd>Para usuarios administradores, pueden visitar <a href="/admin/request-admin">esta página administrativa</a> donde podrá realizar las acciones que le son permitidas.</dd>';
      $output .= '</dl>';
      return $output;
  }
}


/**
 * Define behavior of date red/orange for each scene
 * @author Sandi <email@email.com>
 */
function defineDatesSemaphore($values){

  $answer = [];

  $config = \Drupal::config('findeter_pqrsd.admin');
  $peticion = $config->get('semaphore');

  if(isset($values['field_pqrsd_preferencial']) && $values['field_pqrsd_preferencial'] == 'congresista'){
    $addDays = $peticion['all'];
  }else{
    if(isset($values['field_pqrsd_tipo_radicado']) && $values['field_pqrsd_tipo_radicado'] == 'Peticiones'){
      $typeRequest = $values['field_pqrsd_tipo_peticion'];
      if(isset($peticion[$typeRequest])){
        $addDays = $peticion[$typeRequest];
      }else{
        $addDays = $peticion['none'];
      }
    }else{
      $addDays = $peticion['none'];
    }
  }

  //correct number of days
  $addDays['orange']--;
  $addDays['red']--;

  $dateFormat = 'Y-m-d';
  if($addDays['logic'] == 'calendar days'){
    $dateOrange = date($dateFormat,strtotime('tomorrow +'.$addDays['orange'].' days'));
    $dateRed = date($dateFormat,strtotime('tomorrow +'.$addDays['red'].' days'));
    $answer = ['orange'=>$dateOrange,'red'=>$dateRed,'number-red'=>$addDays['red']];
  }else{
    $dateOrange = date($dateFormat,_getBussinesDays($addDays['orange']));
    $dateRed = date($dateFormat,_getBussinesDays($addDays['red']));
    $answer = ['orange'=>$dateOrange,'red'=>$dateRed,'number-red'=>$addDays['red']];
  }

  return $answer;
}


/**
 * Calculate timestamp for bussines day in the future
 * @author user 3ddesarrollo <3ddesarrollo@3dstudioweb.com>
 * @author Sandi <email@email.com>
 */
function _getBussinesDays($addDays, $day_answer = FALSE){

  $timeStamp = strtotime("tomorrow");

  $tot_day_answer = 0; //Conteo de dias habiles para la respuesta

  // Validar fecha de un dia feriado.
  BusinessDay::enable('Carbon\Carbon');
  Carbon::setHolidaysRegion('co');

  // loop for X days
  for($i=0; $i<$addDays; $i++){

    // add 1 day to timestamp
    $addDay = 86400;

    // get what day it is next day
    $nextDay = date('w', ($timeStamp+$addDay));
    $day = date('d', $timeStamp);
    $mounth = date('m', $timeStamp);
    $year = date('Y', $timeStamp);

    // Validar fecha de un dia feriado.
    $holiDays = FALSE;
    if (!$day_answer) {
      $holiDays = Carbon::parse("$year-$mounth-$day")->isHoliday();
      // $holiDays = Carbon::parse("2022-07-20")->isHoliday();
    }

    // if it's Saturday or Sunday get $i-1
    if(($nextDay == 0 || $nextDay == 6) || $holiDays) {
        $day_answer == FALSE ? $i-- : $tot_day_answer++;
    }
    // modify timestamp, add 1 day
    $timeStamp = $timeStamp+$addDay;

  }

  //Se restan los dias no habiles mas los dias desde su fecha de vencimiento.
  $res_day_answer = $addDays - $tot_day_answer;

  return $day_answer ? $res_day_answer  : $timeStamp;
}

/**
 * Implements hook_form_alter
 * @author user 3ddesarrollo <3ddesarrollo@3dstudioweb.com>
 * @author Sandi <email@email.com>
 */
function findeter_pqrsd_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  if($form['#id'] == 'views-exposed-form-pqrsd-page-1' || $form['#id'] == 'views-exposed-form-pqrsd-page-2'){
    $form['#attached']['library'][] = 'findeter_pqrsd/admin_pages';
    $form['#attached']['library'][] = 'findeter_pqrsd/classy-dropbutton';
  }
  /* ============================================
  REPORTES
  -Se crea los campos fecha para generar el formato 379
  =============================================== */

  if($form['#id'] == 'views-exposed-form-pqrsd-page-2'){

    /* ============================================
    Informacion para sincronizar en la API SMFC
    =============================================== */
    $stateSmfcNid = \Drupal::service('state')->get('findeter_pqrsd.api_smfc_nid');

    //Validamos si existen datos para importar o registrar.
    $dataState = \Drupal::service('state')->get('findeter_pqrsd.api_smfc_data');

    $rowSmfc = [];
    $total = 0;

    if(!empty($stateSmfcNid) || !is_null($stateSmfcNid)){
      foreach ($stateSmfcNid as $key => $value) {
        $total++;
        $rowSmfc[] = [
          $key+1,
          $stateSmfcNid[$key]['title'],
          $stateSmfcNid[$key]['smfc'] ? Markup::create('<span style="width:20px; height:20px" class="green">Si</span>') : Markup::create('<span>- - -</span>'),
          $stateSmfcNid[$key]['smfc'] ? Markup::create('<span>En espera...</span>') : Markup::create('<span>- - -</span>'),
        ];
      }
    }
    $form['container_api_smfc'] = [
      '#type' => 'details',
      '#title' => 'API SMFC',
      '#open' =>$total != 0 || !empty($dataState) ? TRUE : FALSE,
    ];

    //La siguiente información muestra radicados de Quejas o Reclamos que están a la espera de ser sincronizados con la
    $form['container_api_smfc']['description'] = [
      '#type' => 'item',
      '#markup' => '<p>'.
      t('The following information shows filings of Complaints or Claims that are waiting to be synchronized with the API Smart Supervision SMFC').'</p>',
    ];

    $form['container_api_smfc']['table_smfc'] = [
      '#type' => 'table',
      '#header' => [t('No.'), t('Title'), t('POST'), t('PUT')],
      '#rows' => $rowSmfc,
      '#empty' => t('No results found'),
      '#attributes' => ['class' => ['views-view-table']],
      '#caption' => t('Sync: @total', ['@total' => $total]),
    ];

    //Construimos la ruta para el controlador
    $urlActionPqrsdSmfc = Url::fromRoute('findeter_pqrsd.consult_complaints_smfc');

    $urlActionPqrsdSmfcOptions = [
      'attributes' => ['class' => ['button button--primary']],
    ];

    $urlActionPqrsdSmfc->setOptions($urlActionPqrsdSmfcOptions);

    $ActionPqrsdSmfc = Link::fromTextAndUrl(is_null($dataState) || empty($dataState) ? t('Consult and register') : t('Register data'), $urlActionPqrsdSmfc);

     //La siguiente información consulta y registra los pqrsd disponibles desde la API SMFC
     $form['container_api_smfc']['description_consult'] = [
      '#type' => 'item',
      '#markup' => '<p><br>'.
      t('You can consult and register the Complaints or Claims available in Smart Supervision API SMFC, the results will be displayed in the API SMFC table and will be waiting for a response.').'</p>'.$ActionPqrsdSmfc->toString().'',//Puedes consultar y registrar las Quejas o Reclamos disponibles en Smart Supervision, Los resultados se visualizaran en la tabla API SMFC y estaran a la espera de una respuesta.
    ];

    if(!is_null($dataState) || !empty($dataState)){
      //Mostramos un mensaje si existen datos para registrar y hacer la accion respectiva
      $form['container_api_smfc']['data_register'] = [
        '#type' => 'item',
        '#markup' => '<p>'.
        t('<strong>Information:</strong> There are @num data to register as type of filings Complaints. Click on <em>Register data</em> to perform the action', ['@num' => count($dataState)]).'</p>',
      ];

      \Drupal::messenger()->addMessage(t('<strong>Information:</strong> There are @num data to register as type of filings Complaints. Click on <em>Register data</em> to perform the action', ['@num' => count($dataState)]), 'info');
    }

    /* ============================================
    Informe 379 (Deprecated)
    =============================================== */

    /*$form['container_date'] = [
      '#type' => 'details',
      '#title' => 'Reporte 379',
      '#open' =>FALSE,
    ];

    $form['container_date']['description'] = [
      '#type' => 'item',
      '#markup' => '<p>Los siguientes campos se utilizan para el <strong>reporte 379.</strong></p>',
    ];

    $form['container_date']['trimestre-inicio'] = [
      '#type' => 'textfield',
      '#title' =>t('Fecha creación'),
      '#placeholder' => t('Trimestral'),
      '#size' => 30,
      //'#size' => 60,
      //'#maxlength' => 128,
    ];

    $form['container_date']['trimestre-fin'] = [
      '#type' => 'textfield',
      '#title' =>t('<br>'),
      '#placeholder' => t('Trimestral'),
      '#size' => 30,
      //'#size' => 60,
      //'#maxlength' => 128,
    ];*/

  }


}

/**
* Implements hook_mail().
* @author Sandi <email@email.com>
*/
function findeter_pqrsd_mail($key, &$message, $params) {

  switch ($key) {
    case 'transfer_pqrsd':
      $message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed; delsp=yes';
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = 'Traslado PQRSD por competencia';
      $message['body'][] = $params['message'];
      break;

    case 'registered_pqrsd':
      $message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed; delsp=yes';
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = 'Registro de PQRSD';
      $message['body'][] = $params['message'];
      break;

    case 'answer_pqrsd':
      $message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed; delsp=yes';
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = 'Respuesta de PQRSD';
      $message['body'][] = $params['message'];
      break;

    case 'asigned_pqrsd':
      $message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed; delsp=yes';
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = 'Nueva asignación de PQRSD';
      $message['body'][] = $params['message'];
      break;

    case 'notification_orange':
      $message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed; delsp=yes';
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = 'Pronto vencimiento para respuesta de PQRSD';
      $message['body'][] = $params['message'];
      break;

    case 'notification_red':
      $message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed; delsp=yes';
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = 'Tiempo execido para  respuesta de PQRSD';
      $message['body'][] = $params['message'];
      break;
  }
}


/**
* Create a random number
* @author Sandi <email@email.com>
*/
function generarNumeroRadicado($type){

  $query = \Drupal::entityQuery('node')
                ->condition('type', 'pqrsd')
                ->sort('nid', 'DESC')
                ->range(0, 1)
                ->execute();

  $nid = array_values($query);
  $node = Node::load($nid[0]);

  $number_settled = $node->get('field_pqrsd_numero_radicado')->value;
  $secuencialNumber = preg_split('/[A-Z]/', $number_settled);

  //$config = \Drupal::service('config.factory')->getEditable('findeter_pqrsd.settings');
  //$secuencialNumber = $config->get('number_settled',1);

  if(!$secuencialNumber){
    $secuencialNumber = 1;
  }

  $secuencialNumber[1]++;
  $numeroRadicado = date('Ymd',\Drupal::time()->getCurrentTime());
  $numeroRadicado .= $type[0].$secuencialNumber[1];

  //$config->set('number_settled', $secuencialNumber)->save();

  /*for($i=0;$i<=4;$i++){
    $numeroRadicado .= rand (0, 9) ;
  }

  $arrayAbc = ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'];
  for($i=0;$i<2;$i++){
    $rand = rand (0, 25) ;
    $numeroRadicado .= $arrayAbc[$rand] ;
  }*/

  return $numeroRadicado;

}


/**
* Implements hook_cron()
* @author Sandi <email@email.com>
*/
function findeter_pqrsd_cron() {

  $now = \Drupal::time()->getCurrentTime();
  $last_run = \Drupal::state()->get('findeter_pqrsd.last_run', 0);

  if (date('Y-m-d',$now) !== date('Y-m-d', $last_run)) {

    \Drupal::state()->set('findeter_pqrsd.last_run', $now);

    $view = Views::getView('pqrsd');
    $view->setDisplay('block_1');
    $render_view = $view->render();

    foreach($render_view['#rows'][0]['#rows'] as $row){

      $orangeDate = $row->_entity->get('field_pqrsd_fecha_naranja')->getValue()[0]['value'];
      $redDate = $row->_entity->get('field_pqrsd_fecha_roja')->getValue()[0]['value'];
      $numberPqrsd = $row->_entity->get('field_pqrsd_numero_radicado')->getValue()[0]['value'];
      $email = $row->_entity->getOwner()->getEmail();
      $userName = $row->_entity->getOwner()->getAccountName();

      if (date('Y-m-d') == $orangeDate) {

        $mailManager = \Drupal::service('plugin.manager.mail');
        $module = 'findeter_pqrsd';
        $key = 'notification_orange';
        $to = $email;

        $mailBody[] = '<p>Hola '.$userName.'</p><br>';
        $mailBody[] = '<p>Le informamos que se la PQRSD con número: <b>'.$numberPqrsd.'</b> se encuentra pronta a caducar el próximo:</p>';
        $mailBody[] = '<div class="expiration-orange">
                        '.date('d/m/Y',strtotime($orangeDate)).'
                      </div>';
        $mailBody[] = '<p>Le invitamos a gestionar esta PQRSD, iniciando sesión en la página administrativa del sistema.</p>';
        $mailBody[] = '<hr>';
        $mailBody[] = 'Cordialmente,';
        $mailBody[] = 'Vicepresidencia comercial - Servicio al cliente';
        $mailBody[] = 'Findeter';
        $mailBody[] = '<a href="https://www.findeter.gov.co" target="_blank"><img onerror="this.remove();" alt="Findeter" src="https://www.findeter.gov.co/sites/default/files/webfinde/images/encabezado/logo.png" width="300" height="150"></a>';


        $params['message'] = implode('<br>',$mailBody);

        $langcode = \Drupal::currentUser()->getPreferredLangcode();
        $send = true;

        $result = $mailManager->mail($module, $key, $to, $langcode, $params, NULL, $send);

      }else{
        if (date('Y-m-d') == $redDate) {

          $mailManager = \Drupal::service('plugin.manager.mail');
          $module = 'findeter_pqrsd';
          $key = 'notification_red';
          $to = $email;

          $mailBody[] = '<p>Hola '.$userName.'</p><br>';
          $mailBody[] = '<p>Le informamos que se la PQRSD con número: <b>'.$numberPqrsd.'</b> execidó el tiempo de respuesta asignado para su respuesta el:</p>';
          $mailBody[] = '<div class="expiration-orange">
                          '.date('d/m/Y',strtotime($redDate)).'
                        </div>';
          $mailBody[] = '<p>Le invitamos a gestionar esta PQRSD, iniciando sesión en la página administrativa del sistema.</p>';
          $mailBody[] = '<hr>';
          $mailBody[] = 'Cordialmente,';
          $mailBody[] = 'Vicepresidencia comercial - Servicio al cliente';
          $mailBody[] = 'Findeter';
          $mailBody[] = '<a href="https://www.findeter.gov.co" target="_blank"><img onerror="this.remove();" alt="Findeter" src="https://www.findeter.gov.co/sites/default/files/webfinde/images/encabezado/logo.png" width="300" height="150"></a>';


          $params['message'] = implode('<br>',$mailBody);

          $langcode = \Drupal::currentUser()->getPreferredLangcode();
          $send = true;

          $result = $mailManager->mail($module, $key, $to, $langcode, $params, NULL, $send);


        }
      }

    }

  }

   /* ============================================
  Enviar radicados de Quejas o Reclamos
  a la aplicacion API SMFC
  ===============================================*/
  $stateSmfcNid = \Drupal::service('state')->get('findeter_pqrsd.api_smfc_nid');

  if(!is_null($stateSmfcNid) && !empty($stateSmfcNid)) {

    $apiSmfc = \Drupal::service('api.smfc');
    $nid = [];
    $login = $apiSmfc->login();

    if($login) {

      foreach ($stateSmfcNid as $key => $state) {

        $nid[$key] = [
          "nid" => $state['nid'],
          "title" => $state['title'],
          "created" => $state['created'],
          "smfc" => $state['smfc']
        ];

        if(date('Y-m-d', $now) !== date('Y-m-d', $state['created'])) {

          if($state['smfc'] === FALSE) {

            $post = $apiSmfc->postComplaints($state['nid']);
            //$post = TRUE;

            $post ? $nid[$key]["smfc"] = TRUE : $nid[$key]["smfc"] = FALSE;

          }
          else {

            // Consultamos si hay informacion de usuarios para actualizar.
            $putUpdbUser = $apiSmfc->getUpdateInfoUserComplaints();

            if($putUpdbUser) {
              $put = $apiSmfc->putComplaints($state['nid']);
              //$put = TRUE;

              if(!$put)
                $nid[$key]["smfc"] = TRUE;
              else
                unset($nid[$key]);
            }
          }

        }
      }

      \Drupal::service('state')->set('findeter_pqrsd.api_smfc_nid', $nid);
    }
  }
}


/**
 * Implements hook_preprocess_page
 * @author Sandi <email@email.com>
 */
function findeter_pqrsd_preprocess_page(&$variables) {

  //$apiSmfc = \Drupal::service('api.smfc');
  $routeUrl = \Drupal::routeMatch()->getRouteName();

  if ($routeUrl == 'findeter_pqrsd.confirm_register_pqrsd_admin') {
    $variables['#attached']['library'][] = 'findeter_pqrsd/admin_pages';
  }

  if ($routeUrl == 'findeter_pqrsd.register_pqrsd') {
    $variables['#attached']['library'][] = 'findeter_pqrsd/user_pages';
  }

}

/**
* Create an array with the taxonomy terms
* @author Sandi <email@email.com>
*/
function getTaxonomyTermsForm($tid){

  if(is_array($tid))
    $child_tids = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree('colombia_deparments', $tid[0]['target_id'], 1, false);
  else
    $child_tids = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree('colombia_deparments', $tid, 1, false);

  $options = array();
  foreach ($child_tids as $term) {
    $options[$term->tid] = $term->name;
  }
  return $options;
}


/**
* Callback deparment select ajax event
* @author Sandi <email@email.com>
*/
function callBackDeparment(array &$form, FormStateInterface $form_state) {

  //return $form['output-municipalities'];
  $element= $form_state->getTriggeringElement()["#source"];

  $form_state->setRebuild();

  $parent_tid = $form_state->getValue('field_pqrsd_departamento'); // the parent term id
  //$municipalityOptions = getTaxonomyTermsForm($parent_tid);

  if($element == 'admin'){

    //Campo pilot para obtener los valores de municipio
    // y estos ser guardados en el campo hidden
    $form['info_person']['field_pqrsd_municipio_container']['field_pqrsd_municipio_select'] = [
      '#type' => 'select2',
      '#title' => 'Municipios:',
      '#required' => TRUE,
      '#options' => getTaxonomyTermsForm($parent_tid[0]['target_id']),
      '#select2' => [
        ['allowClear' => FALSE],
      ],
      '#attributes' => ['id' => 'field-pqrsd-municipio-select'],
    ];

    return $form['info_person']['field_pqrsd_municipio_container'];

    //$elem = $form['info_person']['field_pqrsd_municipio']['field_pqrsd_municipio'];
    //$municipalityOptions = getTaxonomyTermsForm($parent_tid[0]['target_id']);

  }else{

    $elem = $form['wrapper']['content-fields']['field_pqrsd_municipio'];

    $municipalityOptions = getTaxonomyTermsForm($parent_tid);
     $elem['#options'] = $municipalityOptions;
    $renderer = \Drupal::service('renderer');
    $renderedField = $renderer->render($elem);

    $response = new AjaxResponse();


    //$response->addCommand(new InvokeCommand(NULL, 'afterLocation', ['Reloading page!']));
    $response->addCommand(new ReplaceCommand('#output-municipalities', $renderedField));

    return $response;
  }

}

/**
 * Build all elements for register/update PQRSD
 * @author Sandi <email@email.com>
 */
function buildPQRSDform(){
  $form = [];

  $nowTimeStamp = \Drupal::time()->getCurrentTime();
  $date = date('Y-m-d', $nowTimeStamp);

  $definitions = \Drupal::service('entity_field.manager')->getFieldDefinitions('node', 'pqrsd');

  // define operation and layout for each field
  $arrayFields['info_radicado']['title_detail'] = 'Información del radicado';
  $arrayFields['info_radicado']['field_pqrsd_tipo_radicado']= 'open required';
  $arrayFields['info_radicado']['field_pqrsd_tipo_peticion'] = '';
  $arrayFields['info_radicado']['field_pqrsd_tipo_solicitante'] = 'required';
  $arrayFields['info_radicado']['field_pqrsd_rango_edad'] = 'close required';
  $arrayFields['info_radicado']['field_pqrsd_grupo_etnico'] = 'open required';
  $arrayFields['info_radicado']['field_pqrsd_preferencial'] = 'required';
  $arrayFields['info_radicado']['field_pqrsd_tipo_discapacidad'] = 'close required';

  $arrayFields['info_person']['title_detail'] = 'Información de la persona';
  $arrayFields['info_person']['field_pqrsd_numero_id'] = 'open required';
  $arrayFields['info_person']['field_pqrsd_tipo_documento'] = 'required';
  $arrayFields['info_person']['field_pqrsd_primer_nombre'] = 'required';
  $arrayFields['info_person']['field_pqrsd_segundo_nombre'] = '';
  $arrayFields['info_person']['field_pqrsd_primer_apellido'] = 'required';
  $arrayFields['info_person']['field_pqrsd_segundo_apellido'] = 'close';
  $arrayFields['info_person']['field_pqrsd_direccion'] = 'open';
  $arrayFields['info_person']['field_pqrsd_departamento'] = '';
  $arrayFields['info_person']['field_pqrsd_municipio_container'] = '';
  $arrayFields['info_person']['field_pqrsd_municipio'] = '';
  $arrayFields['info_person']['field_pqrsd_telefono'] = '';
  $arrayFields['info_person']['field_pqrsd_fax'] = '';
  $arrayFields['info_person']['field_pqrsd_email'] = 'required';
  $arrayFields['info_person']['field_pqrsd_nit'] = '';
  $arrayFields['info_person']['field_pqrsd_razon_social'] = '';
  $arrayFields['info_person']['field_pqrsd_tipo_empresa'] = 'close';

  $arrayFields['info_product']['title_detail'] = 'Información del producto';
  $arrayFields['info_product']['field_pqrsd_nombre_producto'] = 'open required';
  $arrayFields['info_product']['field_pqrsd_archivo'] = '';
  $arrayFields['info_product']['field_pqrsd_motivo'] = 'required';
  $arrayFields['info_product']['field_pqrsd_otros'] = 'close';
  $arrayFields['info_product']['field_pqrsd_descripcion'] = 'column required';

  $arrayFields['info_admin']['title_detail'] = 'Información administrativa';
  $arrayFields['info_admin']['field_pqrsd_canal_recepcion'] = 'open required';
  $arrayFields['info_admin']['field_pqrsd_medio_respuesta'] = '';
  $arrayFields['info_admin']['field_pqrsd_forma_recepcion'] = 'close required';
  $arrayFields['info_admin']['field_asign'] = 'open';
  $arrayFields['info_admin']['field_pqrsd_palabras_clave'] = 'close';
  $arrayFields['info_admin']['field_pqrsd_autorizacion'] = 'required';
  $arrayFields['info_admin']['field_pqrsd_marketing'] = '';

  $weight = 1;
  foreach($arrayFields as $idDetail=>$field){

    // define detail container
    $form[$idDetail] = [
      '#type'  => 'details',
      '#open'  => TRUE
    ];

    foreach($field as $idField=>$operations){
      if($idField=='title_detail'){
        $form[$idDetail]['#title'] = $operations;
      }else{

        // asign the position in the form
        $form[$idDetail][$idField]['#weight'] = $weight;
        $weight++;

        // for each field define form type and options
        if(isset($definitions[$idField])){
          switch($definitions[$idField]->getType()){
            case 'string':
              $form[$idDetail][$idField]['#type'] = 'textfield';
              $form[$idDetail][$idField]['#title'] = $definitions[$idField]->getLabel();
              $form[$idDetail][$idField]['#description'] = $definitions[$idField]->getDescription();
              $form[$idDetail][$idField]['#attributes'] = [
                'placeholder'=>'Diligencie su '.strtolower($definitions[$idField]->getLabel())
              ];
            break;

            case 'list_string':
              $form[$idDetail][$idField]['#type'] = 'select';
              $form[$idDetail][$idField]['#title'] = $definitions[$idField]->getLabel();
              $form[$idDetail][$idField]['#empty_option'] = '-Seleccione una opción-';
              $form[$idDetail][$idField]['#options'] = $definitions[$idField]->getSetting('allowed_values');
              $form[$idDetail][$idField]['#description'] = $definitions[$idField]->getDescription();
            break;

            case 'email':
              $form[$idDetail][$idField]['#type'] = 'email';
              $form[$idDetail][$idField]['#title'] = $definitions[$idField]->getLabel();
              $form[$idDetail][$idField]['#description'] = $definitions[$idField]->getDescription();
              $form[$idDetail][$idField]['#attributes'] = [
                'placeholder'=>'Diligencie su '.strtolower($definitions[$idField]->getLabel())
              ];
            break;

            case 'file':
              $form[$idDetail][$idField]['#type'] = 'managed_file';
              $form[$idDetail][$idField]['#multiple'] = true;
              $form[$idDetail][$idField]['#title'] = $definitions[$idField]->getLabel();
              $form[$idDetail][$idField]['#description'] = $definitions[$idField]->getDescription();
              $form[$idDetail][$idField]['#upload_location'] = 'private://pqrsd/Admin/'.$date;
              $form[$idDetail][$idField]['#upload_validators'] = [
                'file_validate_extensions' => [\Drupal::service('api.smfc')->getExtFile()],
                'file_validate_size'       => [20971520],
              ];
              $form[$idDetail][$idField]['#limit_validation_errors'] = [];
            break;

            case 'string_long':
              $form[$idDetail][$idField]['#type'] = 'textarea';
              $form[$idDetail][$idField]['#maxlength'] = 3500;
              $form[$idDetail][$idField]['#title'] = $definitions[$idField]->getLabel();
              $form[$idDetail][$idField]['#empty_option'] = '-Seleccione una opción-';
              $form[$idDetail][$idField]['#options'] = $definitions[$idField]->getSetting('allowed_values');
              $form[$idDetail][$idField]['#description'] = '<div>Puede ingresar hasta un máximo de 3500 caracteres. <br>Caracteres ingresados: <span class="counter-char">-</span>, máximo 3500 caracteres.</div>';
            break;

            case 'entity_reference':
              $entitySettings = $definitions[$idField]->getSettings();

              $form[$idDetail][$idField]['#type'] = 'entity_autocomplete';
              $form[$idDetail][$idField]['#target_type'] = $entitySettings['target_type'];
              $form[$idDetail][$idField]['#title'] = $definitions[$idField]->getLabel();
              $form[$idDetail][$idField]['#selection_settings'] = array(
                'target_bundles' => $entitySettings['handler_settings']['target_bundles'],
              );
              $form[$idDetail][$idField]['#description'] = $definitions[$idField]->getDescription();

              if($idField == 'field_pqrsd_palabras_clave'){
                $form[$idDetail][$idField]['#tags'] = TRUE;
                $form[$idDetail][$idField]['#autocreate'] = [
                  'bundle' => 'keywords_pqrsd',
                ];
                $form[$idDetail][$idField]['#description'] = 'Escriba las palabras clave separadas por una coma (,)<br>';
                $form[$idDetail][$idField]['#description'] .= 'Si la palabra no está registrada, el sistema la creará';
              }
            break;

            default:
            break;
          }
        }

        // apply operations for layour definition (like columns, required, etc.)
        $listOp = explode(' ',$operations);
        foreach($listOp as $operation){

          switch($operation){
            case 'open':
              $form[$idDetail][$idField]['#prefix'] = '<div class="col">';
            break;

            case 'close':
              $form[$idDetail][$idField]['#suffix'] = '</div>';
            break;

            case 'column':
              $form[$idDetail][$idField]['#prefix'] = '<div class="col">';
              $form[$idDetail][$idField]['#suffix'] = '</div>';
            break;

            case 'required':
              $form[$idDetail][$idField]['#required'] = true;
            break;$arrayFields['info_product']['field_pqrsd_archivo'] = '';

            default:
            break;

          }
        }

      }

    }

  }

  /* ============================================
  Se altera las opciones en tipo de persona
  Se utiliza para obtener los items dependiendo del tipo
  de peticion para findeter o SMFC(Queja o Reclamo)
  =============================================== */
  $optionsTypPerson = $definitions['field_pqrsd_tipo_solicitante']->getSetting('allowed_values');
  $form['info_radicado']['field_pqrsd_tipo_solicitante']['#attributes']= ['disabled' => 'disabled'];

  $optionsTypDocum = $definitions['field_pqrsd_tipo_documento']->getSetting('allowed_values');
  $form['info_person']['field_pqrsd_tipo_documento']['#attributes']= ['disabled' => 'disabled'];

  $optionsProduct = $definitions['field_pqrsd_nombre_producto']->getSetting('allowed_values');
  $form['info_product']['field_pqrsd_nombre_producto']['#attributes']= ['disabled' => 'disabled'];

  $optionsMotive = $definitions['field_pqrsd_motivo']->getSetting('allowed_values');
  $form['info_product']['field_pqrsd_motivo']['#attributes']= ['disabled' => 'disabled'];

  $optionsFormRecep = $definitions['field_pqrsd_forma_recepcion']->getSetting('allowed_values');
  $form['info_admin']['field_pqrsd_forma_recepcion']['#attributes']= ['disabled' => 'disabled'];

  $form['#attached']['drupalSettings']['optionsFields'] = [
    [
      '#edit-field-pqrsd-tipo-solicitante' => $optionsTypPerson
    ],
    [
      '#edit-field-pqrsd-tipo-documento' => $optionsTypDocum
    ],
    [
      '#edit-field-pqrsd-nombre-producto' => $optionsProduct
    ],
    [
      '#edit-field-pqrsd-motivo' => $optionsMotive
    ],
    [
      '#edit-field-pqrsd-forma-recepcion' => $optionsFormRecep
    ],
  ];

  //limit "Número identificacion" field
  $form['info_person']['field_pqrsd_numero_id']['#size'] = 10;
  $form['info_person']['field_pqrsd_numero_id']['#maxlength'] = 10;

  // set default value Email option
  $form['info_admin']['field_pqrsd_medio_respuesta']['#default_value'] = 'email';

  // define values and parameters for Department/municipalities
  $deparmentOptions = getTaxonomyTermsForm(0);

  $form['info_person']['field_pqrsd_departamento']['#type'] = 'select2';
  $form['info_person']['field_pqrsd_departamento']['#options'] = $deparmentOptions;
  $form['info_person']['field_pqrsd_departamento']['#empty_option'] = '-Seleccione una opción-';
  $form['info_person']['field_pqrsd_departamento']['#default_value'] = NULL;
  $form['info_person']['field_pqrsd_departamento']['#source'] = 'admin';
  $form['info_person']['field_pqrsd_departamento']['#ajax'] = [
    'callback'  => 'callBackDeparment',
    'event'     => 'change',
    'wrapper' => 'field-pqrsd-municipio-container',
    'progress'  => [
      'message' => 'Recupersando municipios...',
    ],
  ];
  $form['info_person']['field_pqrsd_departamento']['#select2'] = ['allowClear' => FALSE];


  /*$form['info_person']['field_pqrsd_municipio']['#type'] = 'select2';
  $form['info_person']['field_pqrsd_municipio']['#prefix'] = '<div id="output-municipalities">';
  $form['info_person']['field_pqrsd_municipio']['#suffix'] = '</div>';
  $form['info_person']['field_pqrsd_municipio']['#empty_option'] = '-Seleccione una opción-';
  $form['info_person']['field_pqrsd_municipio']['#default_value'] = !empty($form_state->getValue('field_pqrsd_municipio')) ? $form_state->getValue('field_pqrsd_municipio') : '';
  $form['info_person']['field_pqrsd_municipio']['#select2'] = ['allowClear' => FALSE];*/
  $form['info_person']['field_pqrsd_municipio_container']['#type'] = 'container';
  $form['info_person']['field_pqrsd_municipio_container']['#attributes'] = ['id' => 'field-pqrsd-municipio-container'];

  //Campo municipio que toma valores del campo pilot creado en
  //funcion @see callBackDeparment
  $form['info_person']['field_pqrsd_municipio']['#type'] = 'hidden';
  $form['info_person']['field_pqrsd_municipio']['#default_value'] = '';
  $form['info_person']['field_pqrsd_municipio']['#attributes'] = ['id' => 'field-pqrsd-municipio'];

  //Informacion motivo select2
  $form['info_product']['field_pqrsd_motivo']['#type'] = 'select2';
  $form['info_product']['field_pqrsd_motivo']['#select2'] = ['allowClear' => FALSE];

  // change type of field for "Medio de respuesta" field
  $form['info_admin']['field_pqrsd_medio_respuesta']['#type'] = 'radios';

  // define params for "Autorization" checkbox
  $form['info_admin']['field_pqrsd_autorizacion']['#type'] = 'checkbox';
  $form['info_admin']['field_pqrsd_autorizacion']['#title'] = $definitions['field_pqrsd_autorizacion']->getSetting('allowed_values')['autorizacion_findeter'];
  $form['info_admin']['field_pqrsd_autorizacion']['#value'] = 'autorizacion_findeter';
  unset($form['info_admin']['field_pqrsd_autorizacion']['#empty_option']);
  unset($form['info_admin']['field_pqrsd_autorizacion']['#options']);

  // define params for "Marketing" checkbox
  $form['info_admin']['field_pqrsd_marketing']['#type'] = 'checkbox';
  $form['info_admin']['field_pqrsd_marketing']['#title'] = $definitions['field_pqrsd_marketing']->getSetting('allowed_values')['autorizacion_marketing'];
  unset($form['info_admin']['field_pqrsd_marketing']['#empty_option']);
  unset($form['info_admin']['field_pqrsd_marketing']['#options']);

  // define custom placeholders
  $form['info_product']['field_pqrsd_otros']['#attributes'] = ['placeholder'=>'Especifique cuál'];
  $form['info_product']['field_pqrsd_descripcion']['#attributes'] = [
    'placeholder'=>'Escriba el detalle de su Petición, Queja, Reclamo, Sugerencia o Denuncia.','id'=>'edit-field-pqrsd-descripcion'
  ];
  $form['info_admin']['field_pqrsd_palabras_clave']['#attributes'] = ['placeholder'=>'Diligencie las palabras clave'];
  $form['info_product']['field_pqrsd_archivo']['#description'] = 'Puede registrar hasta 4 archivos.';


  $url = Url::fromRoute('findeter_pqrsd.userslist');
  $modalLink = Link::fromTextAndUrl('Lista de usuarios para asignar', $url);
  $modalLink = $modalLink->toRenderable();
  $modalLink['#attributes'] = [
    'class' => ['use-ajax', 'btn', 'btn-outline-primary'],
    'data-dialog-type' => ['modal'],
    'data-dialog' => ['modal'],
    'data-dialog-options' => ['{"width":800}'],
  ];

  //create new field for asign user
  $form['info_admin']['field_asign']['#type'] = 'textfield';
  $form['info_admin']['field_asign']['#title'] = 'Asignar a';
  $form['info_admin']['field_asign']['#autocomplete_route_name'] = 'findeter_pqrsd.autocomplete.users';
  $form['info_admin']['field_asign']['#attributes'] = [
    'placeholder'=>'Diligencie el nombre de usuario'
  ];
  $form['info_admin']['field_asign']['#description'] = "Puede consultar también la ".render($modalLink);

  $form['actions'] = [
    '#type' => 'actions',
  ];
  $form['actions']['submit'] = [
    '#type' => 'submit',
    '#value' => 'Guardar',
  ];

  $form['#attached']['library'][] = 'findeter_pqrsd/admin_pages';


  return $form;
}


/**
 * Function to send an email when a PQRSD has been asigned
 * @author Sandi <email@email.com>
 */
function sendNotificationAsign($user, $node){

  $mailManager = \Drupal::service('plugin.manager.mail');
  $module = 'findeter_pqrsd';
  $key = 'asigned_pqrsd';
  $to = $user->getEmail();

  $userName = '';
  if(isset($node->get('field_pqrsd_primer_nombre')->getValue()[0]['value'])){
    $userName .= $node->get('field_pqrsd_primer_nombre')->getValue()[0]['value'].' ';
  }
  if(isset($node->get('field_pqrsd_primer_apellido')->getValue()[0]['value'])){
    $userName .= $node->get('field_pqrsd_primer_apellido')->getValue()[0]['value'];
  }

  $mailBody[] = '<p>Hola '.$user->getAccountName().'</p><br>';
  $mailBody[] = '<p>Le informamos que se le asignó una PQRSD para que le dé respuesta:</p>';
  $mailBody[] = '<div class="numero-radicado">
                  <b>No. Radicatoria: </b>'.$node->get('field_pqrsd_numero_radicado')->getValue()[0]['value'].'<br>
                  <b>Cliente: </b>'.$userName.'<br>
                  <b>Fecha registro: </b>'.date('d/m/Y H:m:i',$node->getCreatedTime()).'<br>
                  <b>Fecha vencimiento respuesta: </b>'.$node->get('field_pqrsd_fecha_roja')->getValue()[0]['value'].'
                </div>';
  $mailBody[] = '<p>Le invitamos a gestionar esta PQRSD, iniciando sesión en la página administrativa del sistema</p><br>';
  $mailBody[] = '<hr>';
  $mailBody[] = 'Cordialmente,';
  $mailBody[] = 'Vicepresidencia comercial - Servicio al cliente';
  $mailBody[] = 'Findeter';
  $mailBody[] = '<a href="https://www.findeter.gov.co" target="_blank"><img onerror="this.remove();" alt="Findeter" src="https://www.findeter.gov.co/sites/default/files/webfinde/images/encabezado/logo.png" width="300" height="150"></a>';


  $params['message'] = implode('<br>',$mailBody);

  $langcode = \Drupal::currentUser()->getPreferredLangcode();
  $send = true;

  $result = $mailManager->mail($module, $key, $to, $langcode, $params, NULL, $send);

  \Drupal::messenger()->addStatus(t('Se ha asignado el radicado No. @radicado al usuario @user', [
    '@radicado' => $node->get('field_pqrsd_numero_radicado')->getValue()[0]['value'],
    '@user' => $user->getAccountName(),
  ]));
}


/**
 * Implements hook_preprocess_views_view_field()
 * @author user 3ddesarrollo <3ddesarrollo@3dstudioweb.com>
 * @author Sandi <email@email.com>
 */
function findeter_pqrsd_preprocess_views_view_field(&$variables) {

  $view = $variables['view'];
  $field = $variables['field'];
  $row = $variables['row'];

  $currentUser = \Drupal::currentUser();
  $rolesUser = $currentUser->getRoles();

  if ($view->storage->id() == 'pqrsd'){

    if($view->current_display == 'page_1' || $view->current_display == 'page_2'){

      // No mostrar los iconos de semaforo si el estado de publicacion o anulacion es false
      $status = $row->_entity->getFields()['status'][0]->getValue()['value'];

      if($field->field == 'field_pqrsd_respuesta'){

        if($status == 1){

          if($variables['output'] == ''){

            $variables['output'] = ['#markup' => "<p class='text-open'>Abierta asignada a: </p>"];

          }else{
            $variables['output'] = ['#markup' => "<p class='text-close'>Cerrada por: </p>"];
          }
        } else {
          $variables['output'] = ['#markup' => "<div class='red'>Rojo</div><p class='text-canceled'>Anulado</p>"];
        }

      }

      if($field->field == 'view_node'){
        $nid = $view->field['nid']->original_value;
        $author = $view->field['uid']->original_value;

        $modalOptions = [
          'class'               => ['use-ajax'],
          'data-dialog-type'    => ['modal'],
          'data-dialog'         => ['modal'],
          'data-dialog-options' => ['{"width":1000}'],
          'data-ajax-progress' => ['throbber'],
        ];

        $htmlOutput = '';
        $url = Url::fromRoute('entity.node.canonical', ['node' => $nid]);
        $modalLink = Link::fromTextAndUrl('Ver', $url);
        $modalLink = $modalLink->toRenderable();
        $modalLink['#attributes'] = $modalOptions;
        $htmlOutput .= '<li class="dropbutton-action">'.render($modalLink).'</li></li>';

        if($view->field['field_pqrsd_respuesta']->original_value == '' && !in_array('auditor_pqrsd',$rolesUser)){

          $url = Url::fromRoute('findeter_pqrsd.update_pqrsd_admin', ['nid' => $nid]);
          $modalLink = Link::fromTextAndUrl('Editar', $url);
          $modalLink = $modalLink->toRenderable();
          //$modalLink['#attributes'] = ['class' => ['button']];
          $htmlOutput .='<li class="dropbutton-action secondary-action">'.render($modalLink).'</li>';


          $url = Url::fromRoute('findeter_pqrsd.asign_pqrsd',['nid' => $nid,'usr' => $author]);
          $modalLink = Link::fromTextAndUrl('Asignar', $url);
          $modalLink = $modalLink->toRenderable();
          $modalLink['#attributes'] = $modalOptions;
          $htmlOutput .= '<li class="dropbutton-action secondary-action">'.render($modalLink).'</li>';

          $url = Url::fromRoute('findeter_pqrsd.transfer_pqrsd',['nid' => $nid]);
          $modalLink = Link::fromTextAndUrl('Trasladar', $url);
          $modalLink = $modalLink->toRenderable();
          $modalLink['#attributes'] = $modalOptions;
          $htmlOutput .= '<li class="dropbutton-action secondary-action">'.render($modalLink).'</li>';

          $url = Url::fromRoute('findeter_pqrsd.answer_pqrsd',['nid' => $nid]);
          $modalLink = Link::fromTextAndUrl('Responder', $url);
          $modalLink = $modalLink->toRenderable();
          $modalLink['#attributes'] = $modalOptions;
          $htmlOutput .= '<li class="dropbutton-action secondary-action">'.render($modalLink).'</li>';

          // Anulacion de radicados (su estado real es despublicado).
          if (in_array('pqrsd_administrador', $rolesUser) || in_array('administrator', $rolesUser)) {
            $url = Url::fromRoute('findeter_pqrsd.canceled',
            ['node' => $nid],
            /*['query' => [
              'token' => \Drupal::getContainer()->get('csrf_token')->get("/findeter-pqrsd/canceled/pqrsd/{$nid}")
            ]*/
            );
            $modalLink = Link::fromTextAndUrl('Anular', $url);
            $modalLink = $modalLink->toRenderable();
            $modalLink['#attributes'] = $modalOptions;
            $htmlOutput .= '<li class="dropbutton-action secondary-action">'.render($modalLink).'</li></li>';
          }

        }
        /*$url = Url::fromRoute('findeter_pqrsd.create_pdf',['nid' => $nid]);
        $modalLink = Link::fromTextAndUrl('PDF', $url);
        $modalLink = $modalLink->toRenderable();
        $modalLink['#attributes'] = ['class' => ['button']];
        $htmlOutput .= render($modalLink);*/

        $variables['output'] = ['#markup' => '<div class="dropbutton-wrapper dropbutton-multiple">
        <div class="dropbutton-widget">
        <ul class="dropbutton">
        '.$htmlOutput.'
        </ul>
        </div>
        </div>'];
      }

      if($field->field == 'field_pqrsd_fecha_naranja'){
        $semaphore = '<div class="gray">Gris</div>';

        $preferencial = '';
        if(isset($row->_entity->getFields()['field_pqrsd_preferencial'][0])){
          $preferencial = $row->_entity->getFields()['field_pqrsd_preferencial'][0]->getValue()['value'];
        }

        $tipoRadicado = '';
        if(isset($row->_entity->getFields()['field_pqrsd_tipo_radicado'][0])){
          $tipoRadicado = $row->_entity->getFields()['field_pqrsd_tipo_radicado'][0]->getValue()['value'];
        }

        $tipoPeticion = '';
        if(isset($row->_entity->getFields()['field_pqrsd_tipo_peticion'][0])){
          $tipoPeticion = $row->_entity->getFields()['field_pqrsd_tipo_peticion'][0]->getValue()['value'];
        }

        $registerDate = $row->_entity->getFields()['created'][0]->getValue()['value'];
        $orangeDate = strtotime($row->_entity->getFields()['field_pqrsd_fecha_naranja'][0]->getValue()['value']);
        $redDate = strtotime($row->_entity->getFields()['field_pqrsd_fecha_roja'][0]->getValue()['value']);
        $timeStamp = strtotime('now');

        /*$datesConfigure = defineDatesSemaphore([
          'field_pqrsd_preferencial'  => $preferencial,
          'field_pqrsd_tipo_radicado' => $tipoRadicado,
          'field_pqrsd_tipo_peticion' => $tipoPeticion
        ]);*/

        //$daysleft = $datesConfigure['number-red'] - round(((($timeStamp-$registerDate)/24)/60)/60) +1;
        $date_now = new DateTime(date('Y-m-d'));
        $date_red = new DateTime(date('Y-m-d', $redDate));
        $days_rest = $date_now->diff($date_red);

        $config = \Drupal::config('findeter_pqrsd.admin');
        $peticion = $config->get('semaphore');

        $type_day = $tipoPeticion == "" ? $peticion['none'] : $peticion[$tipoPeticion];

        if($preferencial != 'congresista'){
          if($type_day['logic'] != 'calendar days')
            $daysleft = _getBussinesDays($days_rest->days, TRUE);
          else
            $daysleft = $days_rest->days;
        }else{
          $daysleft = $days_rest->days;
        }

        $closed = false;
        if(isset($row->_entity->getFields()['field_pqrsd_respuesta'][0])){
          $closed = $row->_entity->getFields()['field_pqrsd_respuesta'][0]->getValue()['value'];
        }

        // No mostrar los iconos de semaforo si el estado de publicacion o anulacion es false
        if($status == 1){

          if($closed){
            $semaphore = '
              <div class="blue">Azul</div>
          ';
          }else{
            if($timeStamp<$orangeDate){
              $semaphore = '
              <div class="green">Verde</div>
              <div class="days-left">Quedan:<br>'.$daysleft.' días</div>';

            }else{

              if($timeStamp>=$orangeDate && $timeStamp<$redDate){

                $semaphore = '
                  <div class="orange">Naranja</div>
                  <div class="days-left">Quedan:<br>'.$daysleft.' días</div>';

              }else{
                if($timeStamp>=$redDate){
                  $semaphore = '<div class="red">Rojo</div>';
                }
              }
            }
          }
        } else {
          $semaphore = '<div class="red">Rojo</div><p class="text-canceled">Anulado</p';
        }

        $variables['output'] = ['#markup' => $semaphore];
      }

    }

    /* ============================================
    PAGE ESTADOS PQRSD
    =============================================== */
    if($view->current_display == 'page_3'){
      if($field->field == 'field_pqrsd_respuesta'){
        if($variables['output'] == ''){
          $variables['output'] = ['#markup' => '<span class="badge badge-info">Pendiente por responder</span>'];
        }
      }

      if($field->field == 'field_pqrsd_respuesta_archivos'){
        if($variables['output'] == ''){
          $variables['output'] = ['#markup' => '<span class="badge badge-light">-- N/A --</span>'];
        }
      }
    }

  }

}


/**
 * Implements hook_preprocess_views_exposed_form()
 * @author user 3ddesarrollo <3ddesarrollo@3dstudioweb.com>
 * @author Sandi <email@email.com>
*/
function findeter_pqrsd_preprocess_views_exposed_form(&$variables) {

  if($variables['form']['#id'] == 'views-exposed-form-pqrsd-page-1'){

    // for exposed user request filters, join all inputs in two fieldsets
    $variables['form']['id_radicado']['#prefix'] = '
      <div class="seven-details col-1">
        <strong>Buscar PQRSD:</strong>
        <div class="seven-details__summary">';
    $variables['form']['palabras-clave']['#suffix'] = '</div></div>';

    $variables['form']['created_wrapper']['#prefix'] = '
      <div class="seven-details col-2">
        <strong>Filtrar por:</strong>
        <div class="seven-details__summary">';
    $variables['form']['status']['#suffix'] = '</div></div>';
  }

  if($variables['form']['#id'] == 'views-exposed-form-pqrsd-page-2'){

    $variables['form']['producto']['#prefix'] = '
      <div class="seven-details col-1">
        <strong>Buscar PQRSD:</strong>
        <div class="seven-details__summary">';

    $variables['form']['palabras-clave']['#suffix'] = '</div></div>';

    $variables['form']['created_wrapper']['#prefix'] = '
      <div class="seven-details col-2">
        <strong>Filtrar por:</strong>
        <div class="seven-details__summary">';
    $variables['form']['status']['#suffix'] = '</div><hr></div>';

    //$url = Url::fromRoute('findeter_pqrsd.expor_report_pdf',['filter'=>'filter']);
    $urlReporteXlsx = Url::fromRoute('findeter_pqrsd.expor_report_excel', ['filter'=>'filter']);
    $urlStatistics = Url::fromRoute('findeter_pqrsd.reports_statistics');

    $link_options = array(
      'attributes' => array(
        'class' => array(
          'export-link',
          'excel-link',
        ),
      ),
    );
    $link_options_statistics = array(
      'attributes' => array(
        'class' => array(
          'export-link',
          'statistics-link',
        ),
      ),
    );
    //$url->setOptions($link_options);
    $urlReporteXlsx->setOptions($link_options);
    $urlStatistics->setOptions($link_options_statistics);

    //$exportPdf = Link::fromTextAndUrl('Exportar datos PDF', $url);
    $urlReporteXlsx = Link::fromTextAndUrl('Exportar Excel', $urlReporteXlsx);
    $urlStatistics = Link::fromTextAndUrl('Estadísticas', $urlStatistics);

    //$exportPdf = $exportPdf->toRenderable();
    $urlReporteXlsx = $urlReporteXlsx->toRenderable();
    $urlStatistics = $urlStatistics->toRenderable();

    $variables['form']['actions']['#suffix'] = render($urlReporteXlsx).' '.render($urlStatistics).'<ul><li>La exportación en Excel solo se aplicará para filtros del campo <strong><em>Fecha Creacion</em></strong></li></ul>';
  }
  /* ============================================
  PAGE ESTADOS DE PQRSD FILTER
  =============================================== */
  if($variables['form']['#id'] == 'views-exposed-form-pqrsd-page-3'){

    // for exposed user request filters, join all inputs in two fieldsets
    $variables['form']['id_radicado']['#prefix'] = '
      <div class="alert alert-info">
        <h3 class="text-dark mb-2 font-weight-bold">Buscar Estado del Radicado</h3>
        <p>Ingrese el número de su radicado en el formulario, este número se le presenta al finalizar el registro de un radicado, como por ejemplo:
        <strong>5692TD</strong></p>
        <hr>
        <p><i class="fas fa-info-circle"></i> También puede revisar el email enviado a su correo electrónico.</p>
      </div>';

    //dump($variables);

  }

}


/**
 * Implements hook_views_pre_view
 * @author user 3ddesarrollo <3ddesarrollo@3dstudioweb.com>
 * @author Sandi <email@email.com>
 */
function findeter_pqrsd_views_pre_view(ViewExecutable $view, $display_id, array &$args) {

  //retrive logued user info
  $currentUser = \Drupal::currentUser();
  $rolesUser = $currentUser->getRoles();


  if($view->storage->id()== 'pqrsd' && ($display_id == 'page_1' || $display_id == 'page_2')){
    $args[0] = $currentUser->id();
    // if user is admin, remove argument to show all nodes
    if(in_array('administrator',$rolesUser) || in_array('auditor_pqrsd',$rolesUser) || in_array('pqrsd_denuncias',$rolesUser)){
      unset($args[0]);
    }

  }

  /* ============================================
  FILTRAR VALORES POR FECHA E IMPORTAR DATOS AL EXCEL
  SI EXISTEN EL PARAMETRO CREATED VIA GET
  =============================================== */
   /**
   * @author user 3ddesarrollo <3ddesarrollo@3dstudioweb.com>
   */
  if($view->storage->id()== 'pqrsd' && $display_id == 'reporte_excel_pqrsd'){

    if($args[0] != 'filter'){

      $uid = \Drupal::request()->getPathInfo();

      $argus = explode("&", $args[0]);
      $param = [];

      foreach($argus as $valor){
        $sep = explode('=', $valor);
        array_push($param, $sep[1]);
      }

      if(!empty($param[8]) && !empty($param[9])){

        $fechaMin = date('Y-m-d', strtotime($param[8]));
        $fechaMax = date('Y-m-d', strtotime($param[9]));

        $view->display_handler->options['filters']['created']['value']['min'] = $fechaMin;
        $view->display_handler->options['filters']['created']['value']['max'] = $fechaMax;

      }else{
        $view->display_handler->options['filters']['created']['value']['max'] = date('Y-m-d');
      };

    }else{
      $view->display_handler->options['filters']['created']['value']['max'] = date('Y-m-d');
    }

  }

  /**
   * @author user 3ddesarrollo <3ddesarrollo@3dstudioweb.com>
   */
  if($view->storage->id()== 'pqrsd'  && ($display_id == 'page_1' || $display_id == 'page_2')){

      //dump($view);
     // if user is admin, remove argument to show all nodes
     // FILTRAR PQRSD SI EL ROL DE USUARIO ES PQRSD DENUNCIAS
     if(in_array('pqrsd_denuncias',$rolesUser)){

      $type_settled = $view->display_handler->options['filters']['field_pqrsd_tipo_radicado_value']['value'];
      $settled_filter = array_diff($type_settled, ['Peticiones', 'Quejas', 'Reclamos', 'Sugerencias']);
      $view->display_handler->options['filters']['field_pqrsd_tipo_radicado_value']['value'] = $settled_filter;
    }

    //Vista de reportes
    //Sale un errror en el preview de la propia vista por el render... en desarrollo
    if($display_id == 'page_2'){

      //Construimos un tag de tipo link para traer los datos en la tabla resultados
      $link = [
        '#type' => 'link',
        '#title' => 'Mostrar resultados PQRSD.',
        '#url' => Url::fromRoute('findeter_pqrsd.reports_results_data_table'),
        '#attributes' => [
          'class' => ['use-ajax'],
        ],
      ];

      //Agregamos el link para ser visualizado como fila en la tabla
      $rows[] = [ '#rows' => [
          'data' => \Drupal::service('renderer')->renderRoot($link),
          '#colspan' => 10,
        ]
      ];

      //Tabla de resultados
      $buildTable = [
        'container' => [
          '#type' => 'container',
          '#attributes' => [
            'id'=> "results-table-reports",
          ],
          'table' => [
            '#theme' => 'table',
            '#rows' => $rows,
            '#weight' => 1,
            '#prefix' => '<br><hr><h3>Tabla resumen de resultados</h3>',
            '#sticky' => TRUE,
            '#header' => [
              'Tipo',
              'Recibidas',
              'Pendientes por resolver',
              'Aprobadas a favor del consumidor financiero',
              'Aprobadas a favor de la entidad',
              'Trámites concluidos (cerrados)',
              'Resultas a tiempo',
              'Vencidas',
              'Solicitud acceso información pública',
              'Solicitudes trasladas a otra institución'
            ],
          ],
        ],
      ];

      //Agegamos un campo text_custom para visualizar la tabla en el pie de pagina
      $options = array(
        'id' => 'area_text_custom',
        'table' => 'views',
        'field' => 'area_text_custom',
        'relationship' => 'none',
        'group_type' => 'none',
        'admin_label' => '',
        'empty' => TRUE,
        'tokenize' => FALSE,
        'content' => \Drupal::service('renderer')->renderRoot($buildTable),
        'plugin_id' => 'text_custom',
      );

      //Creamos un pie de pagina en la vista que muestre la tabla resultados
      $view->setHandler($display_id, 'footer', 'area_text_custom', $options);
    }

  }
}

/**
 * Implements hook_views_pre_render
 * @param ViewExecutable $view
 * @author user 3ddesarrollo <3ddesarrollo@3dstudioweb.com>
 * @author Sandi <email@email.com>
 */
function findeter_pqrsd_views_pre_render(\Drupal\views\ViewExecutable $view) {

  /* ============================================
  RENDERIZADO DE ESTADO DE RADICADO
  =============================================== */
  if($view->id() == 'pqrsd' && $view->current_display == 'page_3'){
    if(empty($view->filter['field_pqrsd_numero_radicado_value']->value)){
      $view->result = [];
    }
  }

}

/**
 * Implements hook_form_views_exposed_form_alter()
 *
 */
function findeter_pqrsd_form_views_exposed_form_alter(&$form, FormStateInterface $form_state) {

  if($form['#id'] == 'views-exposed-form-pqrsd-page-2' || $form['#id'] == 'views-exposed-form-pqrsd-page-1') {

    if(isset($form['created_wrapper'])){

      $form['created_wrapper']['created']['min'] = [
        '#title' => "Min",
        '#type' => 'date',
      ];

      $form['created_wrapper']['created']['max'] = [
        '#title' => "Max",
        '#type' => 'date',
      ];
    }
  }
}
