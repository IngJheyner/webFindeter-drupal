<?php 

use Drupal\Core\Url;
use Drupal\Core\Link;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\ReplaceCommand;


/**
 * Implements hook_help().
 */
function findeter_pqrsd_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.findeter_pqrsd':
      $output = '';
      $output .= '<h3>Acerca de</h3>';
      $output .= '<p>Este módulo permite registrar los reclamos, peticiones, solicitudes, etc., para la institución Findeter, con campos y comportamientos específicos.</p>';
      $output .= '<p>Para mayor comprensión se contruyó el formulario mediante pasos multiples con comportamiento ajax.</p>';
      $output .= '<h3>Uso</h3>';
      $output .= '<dl>';
      $output .= '<dt>Configuración</dt>';
      $output .= '<dd>Para configurar los principales parámetros necesarios para el funcionamiento del módulo, puede consultar la <a href="/admin/config/findeter_pqrsd/admin">página administrativa</a> del módulo</dd>';
      $output .= '<dd>Una vez instalado el módulo, puede consultar el formulario en la <a href="/user-request-form">dirección</a></dd>';
      $output .= '<dt>Configuración</dt>';
      $output .= '<dd>Para configurar los principales parámetros necesarios para el funcionamiento del módulo, puede consultar la <a href="/admin/config/findeter_pqrsd/admin">página administrativa</a> del módulo</dd>';
      $output .= '<dd>Una vez instalado el módulo, puede consultar el formulario en la <a href="/user-request-form">dirección</a> para realizar el registro de PQRS mediante la web.</dd>';
      $output .= '<dd>Para usuarios registrados, que tengan los derechos suficientes para administrar los request, pueden visitar <a href="/admin/user-request-admin">esta página administrativa</a> donde podrá realizar las acciones que le son permitidas.</dd>';
      $output .= '<dd>Para usuarios administradores, pueden visitar <a href="/admin/request-admin">esta página administrativa</a> donde podrá realizar las acciones que le son permitidas.</dd>';
      $output .= '</dl>';
      return $output;
  }
}


/**
 * Implements hook_preprocess_views_view_field()
 */
function findeter_pqrsd_preprocess_views_view_field(&$variables) {

  $view = $variables['view'];
  $field = $variables['field'];

  if ($view->storage->id() == 'pqrsd'){
    if($view->current_display == 'page_1'){

      if($field->field == 'field_pqrsd_respuesta'){
          if($variables['output'] == ''){
            $variables['output'] = 'Abierta';
          }else{
            $variables['output'] = 'Cerrada por: '.strip_tags($view->field['uid']->original_value);
          }
        }
      }

      if($field->field == 'view_node'){
        $nid = $view->field['nid']->original_value;
        
        $modalOptions = [
          'class'               => ['use-ajax', 'btn', 'btn-outline-primary', 'button'],
          'data-dialog-type'    => ['modal'],
          'data-dialog'         => ['modal'],
          'data-dialog-options' => ['{"width":800}'],
        ];

        $htmlOutput = '';
        $url = Url::fromRoute('entity.node.canonical', ['node' => $nid]);
        $modalLink = Link::fromTextAndUrl('Ver', $url);
        $modalLink = $modalLink->toRenderable();
        $modalLink['#attributes'] = $modalOptions;
        $htmlOutput .='<br>'.render($modalLink).'<br>';

        if($view->field['field_pqrsd_respuesta']->original_value == ''){ 

          $url = Url::fromRoute('entity.node.edit_form', ['node' => $nid]);
          $modalLink = Link::fromTextAndUrl('Editar', $url);
          $modalLink = $modalLink->toRenderable();
          $modalLink['#attributes'] = ['class' => ['button']];
          $htmlOutput .=render($modalLink);


          $url = Url::fromRoute('findeter_pqrsd.asign_pqrsd',['nid' => $nid]);
          $modalLink = Link::fromTextAndUrl('Asignar', $url);
          $modalLink = $modalLink->toRenderable();
          $modalLink['#attributes'] = $modalOptions;
          $htmlOutput .= render($modalLink).'<br>';

          $url = Url::fromRoute('findeter_pqrsd.transfer_pqrsd',['nid' => $nid]);
          $modalLink = Link::fromTextAndUrl('Trasladar', $url);
          $modalLink = $modalLink->toRenderable();
          $modalLink['#attributes'] = $modalOptions;
          $htmlOutput .= render($modalLink).'<br>';

          $url = Url::fromRoute('findeter_pqrsd.answer_pqrsd',['nid' => $nid]);
          $modalLink = Link::fromTextAndUrl('Responder', $url);
          $modalLink = $modalLink->toRenderable();
          $modalLink['#attributes'] = $modalOptions;
          $htmlOutput .= render($modalLink).'<br>';
        }

        $url = Url::fromRoute('findeter_pqrsd.create_pdf',['nid' => $nid]);
        $modalLink = Link::fromTextAndUrl('PDF', $url);
        $modalLink = $modalLink->toRenderable();
        $modalLink['#attributes'] = ['class' => ['button']];
        $htmlOutput .= render($modalLink);

        $variables['output'] = ['#markup' => $htmlOutput];        
      }

      if($field->field == 'field_pqrsd_fecha_naranja'){
        $semaphore = '<div class="gray">Gris</div>';
        $orangeDate = strtotime($variables['field']->getValue($variables['row']));
        $redDate = strtotime($view->field['field_pqrsd_fecha_roja']->original_value);
        $timeStamp = strtotime('now');
        
        if($timeStamp<$orangeDate){
          $semaphore = '<div class="green">Verde</div>';
        }else{
          if($timeStamp>=$orangeDate && $timeStamp<$redDate){
            $semaphore = '<div class="orange">Naranja</div>';
          }else{
            if($timeStamp>=$redDate){
              $semaphore = '<div class="red">Rojo</div>';
            }
          }
        }

        $variables['output'] = ['#markup' => $semaphore];
      }

  }

}


/**
* Create an array with the taxonomy terms
*/
function getTaxonomyTermsForm($tid){
  $child_tids = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree('colombia_deparments', $tid, 1, false);

  $options = array();
  foreach ($child_tids as $term) {
    $options[$term->tid] = $term->name;
  }
  return $options;
}


/**
* Callback deparment select ajax event
*/
function callBackDeparment(array &$form, FormStateInterface $form_state) {

  $element= $form_state->getTriggeringElement()["#source"];


  $form_state->setRebuild();

  $parent_tid = $form_state->getValue('field_pqrsd_departamento'); // the parent term id
  $municipalityOptions = getTaxonomyTermsForm($parent_tid);

  if($element == 'admin'){
    $elem = $form['info_person']['field_pqrsd_municipio'];
  }else{
    $elem = $form['wrapper']['content-fields']['field_pqrsd_municipio'];
  }
  
  
  $elem['#options'] = $municipalityOptions;
  $renderer = \Drupal::service('renderer');
  $renderedField = $renderer->render($elem);

  $response = new AjaxResponse();
  
  $response->addCommand(new ReplaceCommand('#output-municipalities', $renderedField));
    
  return $response;
}


/**
 * Define behavior of date red/orange for each scene
 */
function defineDatesSemaphore($values){

  $answer = [];

  $peticion['none']         = ['sequence'=>'business days','orange' => 8,'red'=>15];
  $peticion['general']      = ['sequence'=>'business days','orange' => 20,'red'=>30];
  $peticion['particular']   = ['sequence'=>'business days','orange' => 20,'red'=>30];
  $peticion['informacion']  = ['sequence'=>'business days','orange' => 15,'red'=>20];
  $peticion['publica']      = ['sequence'=>'business days','orange' => 15,'red'=>20];
  $peticion['traslado']     = ['sequence'=>'business days','orange' => 8,'red'=>10];
  $peticion['cargo']        = ['sequence'=>'business days','orange' => 25,'red'=>35];
  $peticion['camaras']      = ['sequence'=>'calendar days','orange' => 8,'red'=>10];
  $peticion['asesoria']     = ['sequence'=>'business days','orange' => 20,'red'=>30];
  $peticion['irrespetuosa'] = ['sequence'=>'business days','orange' => 8,'red'=>10];
  $peticion['incompleta|1'] = ['sequence'=>'business days','orange' => 8,'red'=>10];
  $peticion['incompleta|2'] = ['sequence'=>'business days','orange' => 20,'red'=>30];
  $peticion['all']          = ['sequence'=>'calendar days','orange' => 3,'red'=>5];

  if($values['field_pqrsd_tipo_radicado'] == 'Peticiones'){
    $typeRequest = $values['field_pqrsd_tipo_peticion'];
    if(isset($peticion[$typeRequest])){
      $addDays = $peticion[$typeRequest];
    }else{
      if(isset($values['field_pqrsd_preferencial']) && $values['field_pqrsd_preferencial'] == 'congresista'){
        $addDays = $peticion['all'];
      }
    }
  }else{
    $addDays = $peticion['none'];
  }

  //correct number of days
  $addDays['orange']--;
  $addDays['red']--;

  $dateFormat = 'Y-m-d';
  if($addDays['sequence'] == 'calendar days'){
    $dateOrange = date($dateFormat,strtotime('tomorrow +'.$addDays['orange'].' days'));
    $dateRed = date($dateFormat,strtotime('tomorrow +'.$addDays['red'].' days'));
    $answer = ['orange'=>$dateOrange,'red'=>$dateRed];
  }else{
    $dateOrange = date($dateFormat,_getBussinesDays($addDays['orange']));
    $dateRed = date($dateFormat,_getBussinesDays($addDays['red']));
    $answer = ['orange'=>$dateOrange,'red'=>$dateRed];
  }
  return $answer;
}


/**
 * Calculate timestamp for bussines day in the future
 */
function _getBussinesDays($addDays){

  $timeStamp = strtotime("tomorrow");

  // loop for X days
  for($i=0; $i<$addDays; $i++){

      // add 1 day to timestamp
      $addDay = 86400;

      // get what day it is next day
      $nextDay = date('w', ($timeStamp+$addDay));

      // if it's Saturday or Sunday get $i-1
      if($nextDay == 0 || $nextDay == 6) {
          $i--;
      }

      // modify timestamp, add 1 day
      $timeStamp = $timeStamp+$addDay;
  }

  return $timeStamp;
}


/**
 * Implements hook_preprocess_views_exposed_form()
 */
function findeter_pqrsd_preprocess_views_exposed_form(&$variables) {

  if($variables['form']['#id'] == 'views-exposed-form-pqrsd-page-1'){

    // for exposed user request filters, join all inputs in two fieldsets
    $variables['form']['nid']['#prefix'] = '
      <details class="seven-details" open="open">
        <summary class="seven-details__summary">Buscar PQRSD:</summary>';
    $variables['form']['palabras-clave']['#suffix'] = '</details>';

    $variables['form']['estado']['#prefix'] = '
      <details class="seven-details" open="open">
        <summary class="seven-details__summary">Filtrar por:</summary>';
    $variables['form']['fecha-vencimiento']['#suffix'] = '</details>';
  }
  
}


/**
 * Implements hook_form_alter
 */
function findeter_pqrsd_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  if($form['#id'] == 'views-exposed-form-pqrsd-page-1' ){
    $form['#attached']['library'][] = 'findeter_pqrsd/admin_pages';
  }
  
}


/**
* Implements hook_mail().
*/
function findeter_pqrsd_mail($key, &$message, $params) {
 
  switch ($key) {
    case 'traslado':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = 'Se realizó el traslado de una PQRSD';
      $message['body'][] = $params['message'];
      break;
  }
 }