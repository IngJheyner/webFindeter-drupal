<?php

use Drupal\Core\Url;
use Drupal\Core\Link;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\ReplaceCommand;
use Drupal\views\Views;
use Drupal\views\ViewExecutable;
use Drupal\Core\Render\Markup;

/**
 * Implements hook_help().
 */
function findeter_pqrsd_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.findeter_pqrsd':
      $output = '';
      $output .= '<h3>Acerca de</h3>';
      $output .= '<p>Este módulo permite registrar los reclamos, peticiones, solicitudes, etc., para la institución Findeter, con campos y comportamientos específicos.</p>';
      $output .= '<p>Para mayor comprensión se contruyó el formulario mediante pasos multiples con comportamiento ajax.</p>';
      $output .= '<h3>Uso</h3>';
      $output .= '<dl>';
      $output .= '<dt>Configuración</dt>';
      $output .= '<dd>Para configurar los principales parámetros necesarios para el funcionamiento del módulo, puede consultar la <a href="/admin/config/findeter_pqrsd/admin">página administrativa</a> del módulo</dd>';
      $output .= '<dd>Una vez instalado el módulo, puede consultar el formulario en la <a href="/user-request-form">dirección</a></dd>';
      $output .= '<dt>Configuración</dt>';
      $output .= '<dd>Para configurar los principales parámetros necesarios para el funcionamiento del módulo, puede consultar la <a href="/admin/config/findeter_pqrsd/admin">página administrativa</a> del módulo</dd>';
      $output .= '<dd>Una vez instalado el módulo, puede consultar el formulario en la <a href="/user-request-form">dirección</a> para realizar el registro de PQRS mediante la web.</dd>';
      $output .= '<dd>Para usuarios registrados, que tengan los derechos suficientes para administrar los request, pueden visitar <a href="/admin/user-request-admin">esta página administrativa</a> donde podrá realizar las acciones que le son permitidas.</dd>';
      $output .= '<dd>Para usuarios administradores, pueden visitar <a href="/admin/request-admin">esta página administrativa</a> donde podrá realizar las acciones que le son permitidas.</dd>';
      $output .= '</dl>';
      return $output;
  }
}

/**
* Create an array with the taxonomy terms
*/
function getTaxonomyTermsForm($tid){
  $child_tids = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree('colombia_deparments', $tid, 1, false);

  $options = array();
  foreach ($child_tids as $term) {
    $options[$term->tid] = $term->name;
  }
  return $options;
}


/**
* Callback deparment select ajax event
*/
function callBackDeparment(array &$form, FormStateInterface $form_state) {

  $element= $form_state->getTriggeringElement()["#source"];


  $form_state->setRebuild();

  $parent_tid = $form_state->getValue('field_pqrsd_departamento'); // the parent term id
  $municipalityOptions = getTaxonomyTermsForm($parent_tid);

  if($element == 'admin'){
    $elem = $form['info_person']['field_pqrsd_municipio'];
  }else{
    $elem = $form['wrapper']['content-fields']['field_pqrsd_municipio'];
  }


  $elem['#options'] = $municipalityOptions;
  $renderer = \Drupal::service('renderer');
  $renderedField = $renderer->render($elem);

  $response = new AjaxResponse();

  $response->addCommand(new ReplaceCommand('#output-municipalities', $renderedField));

  return $response;
}


/**
 * Define behavior of date red/orange for each scene
 */
function defineDatesSemaphore($values){

  $answer = [];

  $config = \Drupal::config('findeter_pqrsd.admin');
  $peticion = $config->get('semaphore');

  if($values['field_pqrsd_tipo_radicado'] == 'Peticiones'){
    $typeRequest = $values['field_pqrsd_tipo_peticion'];
    if(isset($peticion[$typeRequest])){
      $addDays = $peticion[$typeRequest];
    }else{
      if(isset($values['field_pqrsd_preferencial']) && $values['field_pqrsd_preferencial'] == 'congresista'){
        $addDays = $peticion['all'];
      }
    }
  }else{
    $addDays = $peticion['none'];
  }

  //correct number of days
  $addDays['orange']--;
  $addDays['red']--;

  $dateFormat = 'Y-m-d';
  if($addDays['logic'] == 'calendar days'){
    $dateOrange = date($dateFormat,strtotime('tomorrow +'.$addDays['orange'].' days'));
    $dateRed = date($dateFormat,strtotime('tomorrow +'.$addDays['red'].' days'));
    $answer = ['orange'=>$dateOrange,'red'=>$dateRed];
  }else{
    $dateOrange = date($dateFormat,_getBussinesDays($addDays['orange']));
    $dateRed = date($dateFormat,_getBussinesDays($addDays['red']));
    $answer = ['orange'=>$dateOrange,'red'=>$dateRed];
  }
  return $answer;
}


/**
 * Calculate timestamp for bussines day in the future
 */
function _getBussinesDays($addDays){

  $timeStamp = strtotime("tomorrow");

  // loop for X days
  for($i=0; $i<$addDays; $i++){

      // add 1 day to timestamp
      $addDay = 86400;

      // get what day it is next day
      $nextDay = date('w', ($timeStamp+$addDay));

      // if it's Saturday or Sunday get $i-1
      if($nextDay == 0 || $nextDay == 6) {
          $i--;
      }

      // modify timestamp, add 1 day
      $timeStamp = $timeStamp+$addDay;
  }

  return $timeStamp;
}


/**
 * Implements hook_form_alter
 */
function findeter_pqrsd_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  if($form['#id'] == 'views-exposed-form-pqrsd-page-1' || $form['#id'] == 'views-exposed-form-pqrsd-page-2'){
    $form['#attached']['library'][] = 'findeter_pqrsd/admin_pages';
  }

}


/**
* Implements hook_mail().
*/
function findeter_pqrsd_mail($key, &$message, $params) {

  switch ($key) {
    case 'transfer_pqrsd':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = 'Se realizó el traslado de una PQRSD';
      $message['body'][] = $params['message'];
    break;

    case 'registered_pqrsd':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = 'Registro de PQRSD';
      $message['body'][] = $params['message'];
    break;

    case 'asigned_pqrsd':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = 'Nueva asignación de PQRSD';
      $message['body'][] = $params['message'];
    break;

    case 'notification_orange':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = 'Pronto vencimiento para respuesta de PQRSD';
      $message['body'][] = $params['message'];
    break;

    case 'notification_red':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = 'Tiempo execido para  respuesta de PQRSD';
      $message['body'][] = $params['message'];
    break;
  }
}


/**
* Create a random number
*/
function generarNumeroRadicado(){

  $numeroRadicado = '';
  for($i=0;$i<=4;$i++){
    $numeroRadicado .= rand (0, 9) ;
  }

  $arrayAbc = ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'];
  for($i=0;$i<2;$i++){
    $rand = rand (0, 25) ;
    $numeroRadicado .= $arrayAbc[$rand] ;
  }

  return $numeroRadicado;

}


/**
* Implements hook_cron()
*/
function findeter_pqrsd_cron() {

  $now = \Drupal::time()->getCurrentTime();
  $last_run = \Drupal::state()->get('findeter_pqrsd.last_run', 0);

  if (date('Y-m-d',$now) !== date('Y-m-d', $last_run)) {

    \Drupal::state()->set('findeter_pqrsd.last_run', $now);

    $view = Views::getView('pqrsd');
    $view->setDisplay('block_1');
    $render_view = $view->render();

    foreach($render_view['#rows'][0]['#rows'] as $row){

      $orangeDate = $row->_entity->get('field_pqrsd_fecha_naranja')->getValue()[0]['value'];
      $redDate = $row->_entity->get('field_pqrsd_fecha_roja')->getValue()[0]['value'];
      $numberPqrsd = $row->_entity->get('field_pqrsd_numero_radicado')->getValue()[0]['value'];
      $email = $row->_entity->getOwner()->getEmail();
      $userName = $row->_entity->getOwner()->getUsername();

      if (date('Y-m-d') == $orangeDate) {

        $mailManager = \Drupal::service('plugin.manager.mail');
        $module = 'findeter_pqrsd';
        $key = 'notification_orange';
        $to = $email;

        $mailBody[] = 'Hola '.$userName;
        $mailBody[] = 'Le informamos que se la PQRSD con número: <b>'.$numberPqrsd.'</b> se encuentra pronta a caducar el próximo:';
        $mailBody[] = '<div class="expiration-orange">
                        '.date('d/m/Y',strtotime($orangeDate)).'
                      </div>';
        $mailBody[] = 'Le invitamos a gestionar esta PQRSD, iniciando sesión en la página administrativa del sistema';
        $mailBody[] = '';
        $mailBody[] = 'Cordialmente,';
        $mailBody[] = 'Vicepresidencia comercial - Servicio al cliente';
        $mailBody[] = 'Findeter';

        $params['message'] = implode('<br>',$mailBody);

        $langcode = \Drupal::currentUser()->getPreferredLangcode();
        $send = true;

        $result = $mailManager->mail($module, $key, $to, $langcode, $params, NULL, $send);

      }else{
        if (date('Y-m-d') == $redDate) {

          $mailManager = \Drupal::service('plugin.manager.mail');
          $module = 'findeter_pqrsd';
          $key = 'notification_red';
          $to = $email;

          $mailBody[] = 'Hola '.$userName;
          $mailBody[] = 'Le informamos que se la PQRSD con número: <b>'.$numberPqrsd.'</b> execidó el tiempo de respuesta asignado para su respuesta el:';
          $mailBody[] = '<div class="expiration-orange">
                          '.date('d/m/Y',strtotime($redDate)).'
                        </div>';
          $mailBody[] = 'Le invitamos a gestionar esta PQRSD, iniciando sesión en la página administrativa del sistema';
          $mailBody[] = '';
          $mailBody[] = 'Cordialmente,';
          $mailBody[] = 'Vicepresidencia comercial - Servicio al cliente';
          $mailBody[] = 'Findeter';

          $params['message'] = implode('<br>',$mailBody);

          $langcode = \Drupal::currentUser()->getPreferredLangcode();
          $send = true;

          $result = $mailManager->mail($module, $key, $to, $langcode, $params, NULL, $send);


        }
      }

    }

  }
}


/**
 * Implements hook_preprocess_page
 */
function findeter_pqrsd_preprocess_page(&$variables) {

  $routeUrl = \Drupal::routeMatch()->getRouteName();

  if ($routeUrl == 'findeter_pqrsd.confirm_register_pqrsd_admin') {
    $variables['#attached']['library'][] = 'findeter_pqrsd/admin_pages';
  }

}


/**
 * Build all elements for register/update PQRSD
 */
function buildPQRSDform(){
  $form = [];

  $definitions = \Drupal::service('entity_field.manager')->getFieldDefinitions('node', 'pqrsd');

  // define operation and layout for each field
  $arrayFields['info_radicado']['title_detail'] = 'Información del radicado';
  $arrayFields['info_radicado']['field_pqrsd_tipo_radicado']= 'open required';
  $arrayFields['info_radicado']['field_pqrsd_tipo_peticion'] = '';
  $arrayFields['info_radicado']['field_pqrsd_tipo_solicitante'] = 'required';
  $arrayFields['info_radicado']['field_pqrsd_rango_edad'] = 'close required';
  $arrayFields['info_radicado']['field_pqrsd_grupo_etnico'] = 'open required';
  $arrayFields['info_radicado']['field_pqrsd_preferencial'] = 'required';
  $arrayFields['info_radicado']['field_pqrsd_tipo_discapacidad'] = 'close required';

  $arrayFields['info_person']['title_detail'] = 'Información de la persona';
  $arrayFields['info_person']['field_pqrsd_numero_id'] = 'open';
  $arrayFields['info_person']['field_pqrsd_tipo_documento'] = '';
  $arrayFields['info_person']['field_pqrsd_primer_nombre'] = '';
  $arrayFields['info_person']['field_pqrsd_segundo_nombre'] = '';
  $arrayFields['info_person']['field_pqrsd_primer_apellido'] = '';
  $arrayFields['info_person']['field_pqrsd_segundo_apellido'] = 'close';
  $arrayFields['info_person']['field_pqrsd_direccion'] = 'open';
  $arrayFields['info_person']['field_pqrsd_departamento'] = '';
  $arrayFields['info_person']['field_pqrsd_municipio'] = '';
  $arrayFields['info_person']['field_pqrsd_telefono'] = '';
  $arrayFields['info_person']['field_pqrsd_fax'] = '';
  $arrayFields['info_person']['field_pqrsd_email'] = '';
  $arrayFields['info_person']['field_pqrsd_nit'] = '';
  $arrayFields['info_person']['field_pqrsd_razon_social'] = '';
  $arrayFields['info_person']['field_pqrsd_tipo_empresa'] = 'close';

  $arrayFields['info_product']['title_detail'] = 'Información del producto';
  $arrayFields['info_product']['field_pqrsd_nombre_producto'] = 'open required';
  $arrayFields['info_product']['field_pqrsd_archivo'] = '';
  $arrayFields['info_product']['field_pqrsd_motivo'] = '';
  $arrayFields['info_product']['field_pqrsd_otros'] = 'close';
  $arrayFields['info_product']['field_pqrsd_descripcion'] = 'column required';

  $arrayFields['info_admin']['title_detail'] = 'Información administrativa';
  $arrayFields['info_admin']['field_pqrsd_canal_recepcion'] = 'open required';
  $arrayFields['info_admin']['field_pqrsd_medio_respuesta'] = '';
  $arrayFields['info_admin']['field_pqrsd_forma_recepcion'] = 'close required';
  $arrayFields['info_admin']['field_asign'] = 'open';
  $arrayFields['info_admin']['field_pqrsd_palabras_clave'] = 'close';
  $arrayFields['info_admin']['field_pqrsd_autorizacion'] = 'required';
  $arrayFields['info_admin']['field_pqrsd_marketing'] = '';

  $weight = 1;
  foreach($arrayFields as $idDetail=>$field){

    // define detail container
    $form[$idDetail] = [
      '#type'  => 'details',
      '#open'  => TRUE
    ];

    foreach($field as $idField=>$operations){
      if($idField=='title_detail'){
        $form[$idDetail]['#title'] = $operations;
      }else{

        // asign the position in the form
        $form[$idDetail][$idField]['#weight'] = $weight;
        $weight++;

        // for each field define form type and options
        if(isset($definitions[$idField])){
          switch($definitions[$idField]->getType()){
            case 'string':
              $form[$idDetail][$idField]['#type'] = 'textfield';
              $form[$idDetail][$idField]['#title'] = $definitions[$idField]->getLabel();
              $form[$idDetail][$idField]['#description'] = $definitions[$idField]->getDescription();
              $form[$idDetail][$idField]['#attributes'] = [
                'placeholder'=>'Diligencie su '.strtolower($definitions[$idField]->getLabel())
              ];
            break;

            case 'list_string':
              $form[$idDetail][$idField]['#type'] = 'select';
              $form[$idDetail][$idField]['#title'] = $definitions[$idField]->getLabel();
              $form[$idDetail][$idField]['#empty_option'] = '-Seleccione una opción-';
              $form[$idDetail][$idField]['#options'] = $definitions[$idField]->getSetting('allowed_values');
              $form[$idDetail][$idField]['#description'] = $definitions[$idField]->getDescription();
            break;

            case 'email':
              $form[$idDetail][$idField]['#type'] = 'email';
              $form[$idDetail][$idField]['#title'] = $definitions[$idField]->getLabel();
              $form[$idDetail][$idField]['#description'] = $definitions[$idField]->getDescription();
              $form[$idDetail][$idField]['#attributes'] = [
                'placeholder'=>'Diligencie su '.strtolower($definitions[$idField]->getLabel())
              ];
            break;

            case 'file':
              $fileSettings = $definitions[$idField]->getSettings();

              $form[$idDetail][$idField]['#type'] = 'managed_file';
              $form[$idDetail][$idField]['#cardinality'] = 3;
              $form[$idDetail][$idField]['#multiple'] = true;
              $form[$idDetail][$idField]['#title'] = $definitions[$idField]->getLabel();
              $form[$idDetail][$idField]['#upload_validators'] = [
                'file_validate_extensions' => [$fileSettings['file_extensions']],
                'file_validate_size'       => 20971520,
              ];
              $form[$idDetail][$idField]['#description'] = $definitions[$idField]->getDescription();
            break;

            case 'string_long':
              $form[$idDetail][$idField]['#type'] = 'textarea';
              $form[$idDetail][$idField]['#maxlength'] = 3500;
              $form[$idDetail][$idField]['#title'] = $definitions[$idField]->getLabel();
              $form[$idDetail][$idField]['#empty_option'] = '-Seleccione una opción-';
              $form[$idDetail][$idField]['#options'] = $definitions[$idField]->getSetting('allowed_values');
              $form[$idDetail][$idField]['#description'] = '<div>Puede ingresar hasta un máximo de 3500 caracteres. <br>Caracteres ingresados: <span class="counter-char">-</span>, máximo 3500 caracteres.</div>';
            break;

            case 'entity_reference':
              $entitySettings = $definitions[$idField]->getSettings();

              $form[$idDetail][$idField]['#type'] = 'entity_autocomplete';
              $form[$idDetail][$idField]['#target_type'] = $entitySettings['target_type'];
              $form[$idDetail][$idField]['#title'] = $definitions[$idField]->getLabel();
              $form[$idDetail][$idField]['#selection_settings'] = array(
                'target_bundles' => $entitySettings['handler_settings']['target_bundles'],
              );
              $form[$idDetail][$idField]['#description'] = $definitions[$idField]->getDescription();

              if($idField == 'field_pqrsd_palabras_clave'){
                $form[$idDetail][$idField]['#tags'] = TRUE;
                $form[$idDetail][$idField]['#autocreate'] = [
                  'bundle' => 'keywords_pqrsd',
                ];
                $form[$idDetail][$idField]['#description'] = 'Escriba las palabras clave separadas por una coma (,)<br>';
                $form[$idDetail][$idField]['#description'] .= 'Si la palabra no está registrada, el sistema la creará';
              }
            break;

            default:
            break;
          }
        }

        // apply operations for layour definition (like columns, required, etc.)
        $listOp = explode(' ',$operations);
        foreach($listOp as $operation){

          switch($operation){
            case 'open':
              $form[$idDetail][$idField]['#prefix'] = '<div class="col">';
            break;

            case 'close':
              $form[$idDetail][$idField]['#suffix'] = '</div>';
            break;

            case 'column':
              $form[$idDetail][$idField]['#prefix'] = '<div class="col">';
              $form[$idDetail][$idField]['#suffix'] = '</div>';
            break;

            case 'required':
              $form[$idDetail][$idField]['#required'] = true;
            break;

            default:
            break;

          }
        }

      }

    }

  }

  //limit "Número identificacion" field
  $form['info_person']['field_pqrsd_numero_id']['#size'] = 10;
  $form['info_person']['field_pqrsd_numero_id']['#maxlength'] = 10;

  // set default value Email option
  $form['info_admin']['field_pqrsd_medio_respuesta']['#default_value'] = 'email';

  // define values and parameters for Department/municipalities
  $deparmentOptions = getTaxonomyTermsForm(0);

  $form['info_person']['field_pqrsd_departamento']['#type'] = 'select';
  $form['info_person']['field_pqrsd_departamento']['#options'] = $deparmentOptions;
  $form['info_person']['field_pqrsd_departamento']['#empty_option'] = '-Seleccione una opción-';
  $form['info_person']['field_pqrsd_departamento']['#default_value'] = NULL;
  $form['info_person']['field_pqrsd_departamento']['#source'] = 'admin';
  $form['info_person']['field_pqrsd_departamento']['#ajax'] = [
    'callback'  => 'callBackDeparment',
    'event'     => 'change',
    'progress'  => [
      'message' => 'Recupersando municipios...',
    ],
  ];

  $form['info_person']['field_pqrsd_municipio']['#type'] = 'select';
  $form['info_person']['field_pqrsd_municipio']['#prefix'] = '<div id="output-municipalities">';
  $form['info_person']['field_pqrsd_municipio']['#suffix'] = '</div>';
  $form['info_person']['field_pqrsd_municipio']['#empty_option'] = '-Seleccione una opción-';
  $form['info_person']['field_pqrsd_municipio']['#default_value'] = NULL;

  // change type of field for "Medio de respuesta" field
  $form['info_admin']['field_pqrsd_medio_respuesta']['#type'] = 'radios';

  // define params for "Autorization" checkbox
  $form['info_admin']['field_pqrsd_autorizacion']['#type'] = 'checkbox';
  $form['info_admin']['field_pqrsd_autorizacion']['#title'] = $definitions['field_pqrsd_autorizacion']->getSetting('allowed_values')['autorizacion_findeter'];
  $form['info_admin']['field_pqrsd_autorizacion']['#value'] = 'autorizacion_findeter';
  unset($form['info_admin']['field_pqrsd_autorizacion']['#empty_option']);
  unset($form['info_admin']['field_pqrsd_autorizacion']['#options']);

  // define params for "Marketing" checkbox
  $form['info_admin']['field_pqrsd_marketing']['#type'] = 'checkbox';
  $form['info_admin']['field_pqrsd_marketing']['#title'] = $definitions['field_pqrsd_marketing']->getSetting('allowed_values')['autorizacion_marketing'];
  unset($form['info_admin']['field_pqrsd_marketing']['#empty_option']);
  unset($form['info_admin']['field_pqrsd_marketing']['#options']);

  // define custom placeholders
  $form['info_product']['field_pqrsd_otros']['#attributes'] = ['placeholder'=>'Especifique cuál'];
  $form['info_product']['field_pqrsd_descripcion']['#attributes'] = [
    'placeholder'=>'Escriba el detalle de su Petición, Queja, Reclamo, Sugerencia o Denuncia.','id'=>'edit-field-pqrsd-descripcion'
  ];
  $form['info_admin']['field_pqrsd_palabras_clave']['#attributes'] = ['placeholder'=>'Diligencie las palabras clave'];
  $form['info_product']['field_pqrsd_archivo']['#description'] = 'Puede registrar hasta 4 archivos.';


  $url = Url::fromRoute('findeter_pqrsd.userslist');
  $modalLink = Link::fromTextAndUrl('Lista de usuarios para asignar', $url);
  $modalLink = $modalLink->toRenderable();
  $modalLink['#attributes'] = [
    'class' => ['use-ajax', 'btn', 'btn-outline-primary'],
    'data-dialog-type' => ['modal'],
    'data-dialog' => ['modal'],
    'data-dialog-options' => ['{"width":800}'],
  ];

  //create new field for asign user
  $form['info_admin']['field_asign']['#type'] = 'textfield';
  $form['info_admin']['field_asign']['#title'] = 'Asignar a';
  $form['info_admin']['field_asign']['#autocomplete_route_name'] = 'findeter_pqrsd.autocomplete.users';
  $form['info_admin']['field_asign']['#attributes'] = [
    'placeholder'=>'Diligencie el nombre de usuario'
  ];
  $form['info_admin']['field_asign']['#description'] = "Puede consultar también la ".render($modalLink);

  $form['actions'] = [
    '#type' => 'actions',
  ];
  $form['actions']['submit'] = [
    '#type' => 'submit',
    '#value' => 'Guardar',
  ];

  $form['#attached']['library'][] = 'findeter_pqrsd/admin_pages';


  return $form;
}


/**
 * Function to send an email when a PQRSD has been asigned
 */
function sendNotificationAsign($user,$node){
  $mailManager = \Drupal::service('plugin.manager.mail');
  $module = 'findeter_pqrsd';
  $key = 'asigned_pqrsd';
  $to = $user->getEmail();

  $userName = '';
  if(isset($node->get('field_pqrsd_primer_nombre')->getValue()[0]['value'])){
    $userName = $node->get('field_pqrsd_primer_nombre')->getValue()[0]['value'].' ';
  }
  if(isset($node->get('field_pqrsd_primer_apellido')->getValue()[0]['value'])){
    $userName = $node->get('field_pqrsd_primer_apellido')->getValue()[0]['value'];
  }

  $mailBody[] = 'Hola '.$user->getUsername();
  $mailBody[] = 'Le informamos que se le asignó una PQRSD para que le dé respuesta:';
  $mailBody[] = '<div class="numero-radicado">
                  <b>#Radicatoria: </b>'.$node->get('field_pqrsd_numero_radicado')->getValue()[0]['value'].'
                  <b>Cliente: </b>'.$userName.'
                  <b>Fecha registro: </b>'.date('d/m/Y H:m:i',$node->getCreatedTime()).'
                  <b>Fecha vencimiento respuesta: </b>'.$node->get('field_pqrsd_fecha_roja')->getValue()[0]['value'].'
                </div>';
  $mailBody[] = 'Le invitamos a gestionar esta PQRSD, iniciando sesión en la página administrativa del sistema';
  $mailBody[] = '';
  $mailBody[] = 'Cordialmente,';
  $mailBody[] = 'Vicepresidencia comercial - Servicio al cliente';
  $mailBody[] = 'Findeter';

  $params['message'] = implode('<br>',$mailBody);

  $langcode = \Drupal::currentUser()->getPreferredLangcode();
  $send = true;

  $result = $mailManager->mail($module, $key, $to, $langcode, $params, NULL, $send);
}


/**
 * Implements hook_preprocess_views_view_field()
 */
function findeter_pqrsd_preprocess_views_view_field(&$variables) {

  $view = $variables['view'];
  $field = $variables['field'];

  if ($view->storage->id() == 'pqrsd'){
    if($view->current_display == 'page_1' || $view->current_display == 'page_2'){

      if($field->field == 'field_pqrsd_respuesta'){
        if($variables['output'] == ''){
          $variables['output'] = 'Abierta';
        }else{
          $variables['output'] = 'Cerrada por: '.strip_tags($view->field['uid']->original_value);
        }
      }
    }

    if($field->field == 'view_node'){
      $nid = $view->field['nid']->original_value;

      $modalOptions = [
        'class'               => ['use-ajax', 'btn', 'btn-outline-primary', 'button'],
        'data-dialog-type'    => ['modal'],
        'data-dialog'         => ['modal'],
        'data-dialog-options' => ['{"width":800}'],
      ];

      $htmlOutput = '';
      $url = Url::fromRoute('entity.node.canonical', ['node' => $nid]);
      $modalLink = Link::fromTextAndUrl('Ver', $url);
      $modalLink = $modalLink->toRenderable();
      $modalLink['#attributes'] = $modalOptions;
      $htmlOutput .='<br>'.render($modalLink).'<br>';

      if($view->field['field_pqrsd_respuesta']->original_value == ''){

        $url = Url::fromRoute('findeter_pqrsd.update_pqrsd_admin', ['nid' => $nid]);
        $modalLink = Link::fromTextAndUrl('Editar', $url);
        $modalLink = $modalLink->toRenderable();
        $modalLink['#attributes'] = ['class' => ['button']];
        $htmlOutput .=render($modalLink);


        $url = Url::fromRoute('findeter_pqrsd.asign_pqrsd',['nid' => $nid]);
        $modalLink = Link::fromTextAndUrl('Asignar', $url);
        $modalLink = $modalLink->toRenderable();
        $modalLink['#attributes'] = $modalOptions;
        $htmlOutput .= render($modalLink).'<br>';

        $url = Url::fromRoute('findeter_pqrsd.transfer_pqrsd',['nid' => $nid]);
        $modalLink = Link::fromTextAndUrl('Trasladar', $url);
        $modalLink = $modalLink->toRenderable();
        $modalLink['#attributes'] = $modalOptions;
        $htmlOutput .= render($modalLink).'<br>';

        $url = Url::fromRoute('findeter_pqrsd.answer_pqrsd',['nid' => $nid]);
        $modalLink = Link::fromTextAndUrl('Responder', $url);
        $modalLink = $modalLink->toRenderable();
        $modalLink['#attributes'] = $modalOptions;
        $htmlOutput .= render($modalLink).'<br>';
      }

      $url = Url::fromRoute('findeter_pqrsd.create_pdf',['nid' => $nid]);
      $modalLink = Link::fromTextAndUrl('PDF', $url);
      $modalLink = $modalLink->toRenderable();
      $modalLink['#attributes'] = ['class' => ['button']];
      $htmlOutput .= render($modalLink);

      $variables['output'] = ['#markup' => $htmlOutput];
    }

    if($field->field == 'field_pqrsd_fecha_naranja'){
      $semaphore = '<div class="gray">Gris</div>';
      $orangeDate = strtotime($variables['field']->getValue($variables['row']));
      $redDate = strtotime($view->field['field_pqrsd_fecha_roja']->original_value);
      $timeStamp = strtotime('now');

      if($timeStamp<$orangeDate){
        $semaphore = '<div class="green">Verde</div>';
      }else{
        if($timeStamp>=$orangeDate && $timeStamp<$redDate){
          $semaphore = '<div class="orange">Naranja</div>';
        }else{
          if($timeStamp>=$redDate){
            $semaphore = '<div class="red">Rojo</div>';
          }
        }
      }

      $variables['output'] = ['#markup' => $semaphore];
    }

  }

}


/**
 * Implements hook_preprocess_views_exposed_form()
 */
function findeter_pqrsd_preprocess_views_exposed_form(&$variables) {

  if($variables['form']['#id'] == 'views-exposed-form-pqrsd-page-1'){

    // for exposed user request filters, join all inputs in two fieldsets
    $variables['form']['id_radicado']['#prefix'] = '
      <details class="seven-details col-1" open="open">
        <summary class="seven-details__summary">Buscar PQRSD:</summary>';
    $variables['form']['palabras-clave']['#suffix'] = '</details>';

    $variables['form']['estado']['#prefix'] = '
      <details class="seven-details col-2" open="open">
        <summary class="seven-details__summary">Filtrar por:</summary>';
    $variables['form']['fecha-vencimiento']['#suffix'] = '</details>';
  }

  if($variables['form']['#id'] == 'views-exposed-form-pqrsd-page-2'){

    $url = Url::fromRoute('findeter_pqrsd.expor_report_pdf',['filter'=>'filter']);
    $link_options = array(
      'attributes' => array(
        'class' => array(
          'export-link',
        ),
      ),
    );
    $url->setOptions($link_options);
    $exportPdf = Link::fromTextAndUrl('Exportar datos PDF', $url);
    $exportPdf = $exportPdf->toRenderable();

    $variables['form']['actions']['#suffix'] = Markup::create('
        <div class="list-charts">
      <div class="chart-container"><canvas id="time-chart"></canvas></div>
      <div class="chart-container"><canvas id="tipo-radicado-chart"></canvas></div>
      <div class="chart-container"><canvas id="tipo-solicitante-chart"></canvas></div>
      <div class="chart-container"><canvas id="tipo-producto-chart"></canvas></div>
      <div class="chart-container"><canvas id="canal-recepcion-chart"></canvas></div>
      <div class="chart-container"><canvas id="forma-recepcion-chart"></canvas></div>
        </div>'.render($exportPdf));
  }

}


/**
 * Implements hook_views_pre_view
 */
function findeter_pqrsd_views_pre_view(ViewExecutable $view, $display_id, array &$args) {

  if($view->storage->id()== 'pqrsd' && $display_id == 'page_1'){

    //retrive logued user info
    $currentUser = \Drupal::currentUser();
    $rolesUser = $currentUser->getRoles();
    $args[0] = $currentUser->id();

    // if user is admin, remove argument to show all nodes
    if(in_array('administrator',$rolesUser)){
      unset($args[0]);
    }

  }

}


/**
 * Implements hook_views_pre_render
 * @param ViewExecutable $view
 */
function findeter_pqrsd_views_pre_render(\Drupal\views\ViewExecutable $view) {

  $spanishMonths['January'] = 'Enero';
  $spanishMonths['February'] = 'Febrero';
  $spanishMonths['March'] = 'Marzo';
  $spanishMonths['April'] = 'Abril';
  $spanishMonths['May'] = 'Mayo';
  $spanishMonths['June'] = 'Junio';
  $spanishMonths['July'] = 'Julio';
  $spanishMonths['August'] = 'Agosto';
  $spanishMonths['September'] = 'Septiembre';
  $spanishMonths['October'] = 'Octubre';
  $spanishMonths['November'] = 'Noviembre';
  $spanishMonths['December'] = 'Diciembre';

  $tipoRadicados = ['Peticiones','Quejas','Reclamos','Sugerencias','Denuncias','Total'];
  foreach($tipoRadicados as $tr){
    $mResume[$tr]['name'] = $tr;
    $mResume[$tr]['recibidas'] = 0;
    $mResume[$tr]['por_resolver'] = 0;
    $mResume[$tr]['favor_consumidor'] = 0;
    $mResume[$tr]['favor_entidad'] = 0;
    $mResume[$tr]['cerrados'] = 0;
    $mResume[$tr]['cerrado_a_tiempo'] = 0;
    $mResume[$tr]['vencidas'] = 0;
    $mResume[$tr]['info_publica'] = 0;
    $mResume[$tr]['trasladadas'] = 0;
  }

  if($view->id() == 'pqrsd' && $view->current_display == 'page_2'){

    $data = [];

    foreach($view->result as $value){

      //define data for general chart
      $month = date('F',$value->_entity->get('created')->value);
      $month = $spanishMonths[$month];

      if(!isset($data['monthly'][$month])){
        $data['monthly'][$month] = 0;
      }
      $data['monthly'][$month]++;

      //define data for "Tipo radicado" field.
      $tipoRadicado = $value->_entity->get('field_pqrsd_tipo_radicado')->value;
      if(!isset($data['tipoRadicado'][$tipoRadicado])){
        $data['tipoRadicado'][$tipoRadicado] = 0;
      }
      $data['tipoRadicado'][$tipoRadicado]++;

      // define data for "Tipo solicitante" field
      $tipoSolicitante = $value->_entity->get('field_pqrsd_tipo_solicitante')->value;
      if(!isset($data['tipoSolicitante'][$tipoSolicitante])){
        $data['tipoSolicitante'][$tipoSolicitante] = 0;
      }
      $data['tipoSolicitante'][$tipoSolicitante]++;

      // define data for "Tipo producto" field
      $tipoProducto = $value->_entity->get('field_pqrsd_nombre_producto')->value;
      if(!isset($data['tipoProducto'][$tipoProducto])){
        $data['tipoProducto'][$tipoProducto] = 0;
      }
      $data['tipoProducto'][$tipoProducto]++;

      // define data for "Canal recepción" field
      $canalRecepcion = $value->_entity->get('field_pqrsd_canal_recepcion')->value;
      if(!isset($data['canalRecepcion'][$canalRecepcion])){
        $data['canalRecepcion'][$canalRecepcion] = 0;
      }
      $data['canalRecepcion'][$canalRecepcion]++;

      // define data for "Forma recepción" field
      $formaRecepcion = $value->_entity->get('field_pqrsd_forma_recepcion')->value;
      if(!isset($data['formaRecepcion'][$formaRecepcion])){
        $data['formaRecepcion'][$formaRecepcion] = 0;
      }
      $data['formaRecepcion'][$formaRecepcion]++;


      // define matrix resume

      $now = strtotime('today');
      $fOrange = strtotime($value->_entity->get('field_pqrsd_fecha_naranja')->value);
      $fRed = strtotime($value->_entity->get('field_pqrsd_fecha_roja')->value);
      $fAnswer = strtotime($value->_entity->get('field_pqrsd_fecha_respuesta')->value);


      // PQRSD cerradas/abiertas
      $mResume[$tipoRadicado]['name'] = $tipoRadicado;
      $mResume[$tipoRadicado]['recibidas'] = $data['tipoRadicado'][$tipoRadicado];

      if( $value->_entity->get('field_pqrsd_respuesta')->value == ''){
        $mResume[$tipoRadicado]['por_resolver']++;

        if($now > $fRed){
          $mResume[$tipoRadicado]['vencidas']++;
        }
      }else{

        $mResume[$tipoRadicado]['cerrados']++;

        if($value->_entity->get('field_pqrsd_respuesta_a_favor')->value == 'findeter'){
          $mResume[$tipoRadicado]['favor_entidad']++;
        }

        if($value->_entity->get('field_pqrsd_respuesta_a_favor')->value == 'consumidor'){
          $mResume[$tipoRadicado]['favor_consumidor']++;
        }

        if($fAnswer < $fRed){
          $mResume[$tipoRadicado]['cerrado_a_tiempo']++;
        }

        if( strpos($value->_entity->get('field_pqrsd_respuesta')->value, 'PQRSD Trasladada a:') ){
          $mResume[$tipoRadicado]['trasladadas']++;
        }

      }

      if( $value->_entity->get('field_pqrsd_tipo_peticion')->value == 'publica') {
        $mResume[$tipoRadicado]['info_publica']++;
      }

    }

    foreach ($mResume as $tR=>$values){
      if($tR != 'Total'){
        $mResume['Total']['recibidas'] += $values['recibidas'];
        $mResume['Total']['por_resolver'] += $values['por_resolver'];
        $mResume['Total']['favor_consumidor'] += $values['favor_consumidor'];
        $mResume['Total']['favor_entidad'] += $values['favor_entidad'];
        $mResume['Total']['cerrados'] += $values['cerrados'];
        $mResume['Total']['cerrado_a_tiempo'] += $values['cerrado_a_tiempo'];
        $mResume['Total']['vencidas'] += $values['vencidas'];
        $mResume['Total']['info_publica'] += $values['info_publica'];
        $mResume['Total']['trasladadas'] += $values['trasladadas'];
      }
    }

    $buildTable = array(
      '#theme' => 'table',
      '#rows' => $mResume,
      '#weight' => 1,
      '#prefix' => '<hr><h3>Tabla resumen de resultados</h3>',
      '#header' => [
        'Tipo',
        'Recibidas',
        'Pendientes por resolver',
        'Aprobadas a favor del consumidor financiero',
        'Aprobadas a favor de la entidad',
        'Trámites concluidos (cerrados)',
        'Resultas a tiempo',
        'Vencidas',
        'Solicitud acceso información pública',
        'Solicitudes trasladas a otra institución'
      ],
    );

    $view->element['#attached']['drupalSettings']['pqrsdReports'] = $data;
    $view->element['mResume'] = $buildTable;

  }
}
