{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{%
  set classes = [
    'node',
    'productoServicios',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
  ]
%}


{% if node.isPublished() %}

<article{{ attributes.addClass(classes) }}>

  <figure class="w-100">

    <img src="{{ file_url(content.field_ps_img_encabezado[0]['#item'].entity.uri.value) }}" class="img-fluid w-100">

  </figure>  

  <div class="encabezado container">

    <h1 class="tituloEncabezado mt-3">{{ content.field_ps_titulo_encabezado[0] }}</h1>   

  </div>

  {{ drupal_breadcrumb() }}

  <div class="cuerpoContenido container my-5">

    {# ============================================
    Titulo y descripcion
    =============================================== #}
    <div class="row">
      
      <div class="col-12 col-lg-6 mb-3 mb-lg-0">
      
        <div class="titulo">

          <h1>{{ label }}</h1>                 

        </div>

        <div class="descripcionContenido mt-4">

          <p>{{ content.field_ps_descripcion.0 }}</p>
          
        </div>  

      </div>

      <div class="col-12 col-lg-6">

        {% if content.field_ps_imagen_portada[0]|render|trim is not empty %}
            
          <img src="{{ file_url(content.field_ps_imagen_portada[0]['#item'].entity.uri.value|image_style('ps_img_portada_interna')) }}"
            alt="{{ content.field_ps_internas_img_encabezado[0]['#item'].alt }}"
            class="img-fluid w-100 imgPortada">

        {% endif %}

      </div>

      <div class="col-12">

        <div class="masInformacion mt-4">

          <p>{{ content.body.0 }}</p>
          
        </div> 

      </div> 

    </div>

    {# ============================================
    Tabs
    =============================================== #}
     <h4 class="mt-4 tituloTabs text-center text-white">{{ content.field_ps_titulo_tabs_opc1[0] }}</h4>

     <ul class="nav nav-tabs d-flex tabPrincipal" id="myTab" role="tablist">                  

          {{ content.field_ps_items }}  

      </ul>

      <div class="tab-content" id="myTabContentPrincipal">

        {{ content.field_ps_paragra_tabs_internas }}       

      </div>

  </div>

  {# ============================================
  SUSCRIBIRSE
  =============================================== #}
  <div class="suscribirseHome mt-5 py-5">

    <div class="container">

      <div class="row">

        <div class="col-12 col-md-6 mb-3 mb-md-0">

          <h4 class="text-white font-weight-bold">
            {{ 'Boletín informativo'|t }}
          </h4>

          <p class="text-white">
            {{ 'Mantegase informado con las ultimas, convocatorias y las noticias más recientes del sector'|t }}
          </p>
        
          
        </div>

        <div class="col-12 col-md-6">

          <section id="mc_embed_signup">    

            <form action="https://findeter.us4.list-manage.com/subscribe/post?u=f0e12d23cbb25da9f26e4d54a&amp;id=c7ba2f26d7" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate>

              <div id="mc_embed_signup_scroll" class="form-group mx-auto d-sm-flex">        
            
                <input type="email" value="" name="EMAIL" class="email form-control" id="mce-EMAIL" placeholder="Email" required>
              
                <div style="position: absolute; left: -5000px;" aria-hidden="true">
                  
                  <input type="text" name="b_f0e12d23cbb25da9f26e4d54a_c7ba2f26d7" tabindex="-1" value=""></div>

                  <div class="clear">

                    <input type="submit" value="Suscribirme" name="subscribir" id="mc-embedded-subscribe" class="btn btn-secondary">
                    
                  </div>

              </div>

            </form>

          </section>
          
        </div>

      </div>
    </div>

  </div>

</article>

{% endif %}