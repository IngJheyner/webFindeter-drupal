{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
  ]
%}

{#{ drupal_dump(content) }#}
{% block paragraph %}

  <div{{ attributes.addClass(classes) }}>

    {% block content %}

      <div class="contenido">

        <div class="flip-card">

          <div class="flip-card-inner">

            <div class="flip-card-front">

              <img src="{{ file_url(content.field_img_principal_cifras[0]['#item'].entity.uri.value) }}" class="img-fluid mx-auto">
            
            </div>

            <div class="flip-card-back">
            
              <img src="{{ file_url(content.field_img_secundaria_cifras[0]['#item'].entity.uri.value) }}" class="img-fluid mx-auto">
            
            </div>
          
          </div>
        
        </div>
        
          <!--img src="{-{ file_url(content.field_img_principal_cifras[0]['#item'].entity.uri.value) }-}" class="img-fluid mx-auto"
          imgPrincipal={-{ file_url(content.field_img_principal_cifras[0]['#item'].entity.uri.value) }-}
          imgSecundario={-{ file_url(content.field_img_secundaria_cifras[0]['#item'].entity.uri.value) }-}
          -->

        <div class="cifra mt-2">

        {% for rawTitle in content.field_cifras_findeter_cifras[0] %}

          {% set title = rawTitle.value|split(' ') %}
          
          {% if title[0] is not empty%}

            {% if title[0]|first == '$' %}

              <h2>$<span class="counter" data-target="6.5">0</span> {{ title[1] }}</h2>

            {% else %}

              <h2><span class="counter" data-target={{ title[0]|replace(',', '.') }}>0</span> {{ title[1] }}</h2>

            {% endif %}
          {% endif %}

        {% endfor %}
        
          <!--h2>{-{ content.field_cifras_findeter_cifras.0 }-}</h2-->

        </div>

        <div class="descripcion">

          <p>{{ content.field_descripcion_cifras.0 }}</p>

        </div>

      </div>      

    {% endblock %}

  </div>

{% endblock paragraph %}
